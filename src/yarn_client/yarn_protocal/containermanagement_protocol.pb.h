// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: containermanagement_protocol.proto

#ifndef PROTOBUF_containermanagement_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_containermanagement_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include "yarn_service_protos.pb.h"
// @@protoc_insertion_point(includes)

namespace hadoop {
namespace yarn {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_containermanagement_5fprotocol_2eproto();
void protobuf_AssignDesc_containermanagement_5fprotocol_2eproto();
void protobuf_ShutdownFile_containermanagement_5fprotocol_2eproto();


// ===================================================================


// ===================================================================

class ContainerManagementProtocolService_Stub;

class ContainerManagementProtocolService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ContainerManagementProtocolService() {};
 public:
  virtual ~ContainerManagementProtocolService();

  typedef ContainerManagementProtocolService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void startContainers(::google::protobuf::RpcController* controller,
                       const ::hadoop::yarn::StartContainersRequestProto* request,
                       ::hadoop::yarn::StartContainersResponseProto* response,
                       ::google::protobuf::Closure* done);
  virtual void stopContainers(::google::protobuf::RpcController* controller,
                       const ::hadoop::yarn::StopContainersRequestProto* request,
                       ::hadoop::yarn::StopContainersResponseProto* response,
                       ::google::protobuf::Closure* done);
  virtual void getContainerStatuses(::google::protobuf::RpcController* controller,
                       const ::hadoop::yarn::GetContainerStatusesRequestProto* request,
                       ::hadoop::yarn::GetContainerStatusesResponseProto* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ContainerManagementProtocolService);
};

class ContainerManagementProtocolService_Stub : public ContainerManagementProtocolService {
 public:
  ContainerManagementProtocolService_Stub(::google::protobuf::RpcChannel* channel);
  ContainerManagementProtocolService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ContainerManagementProtocolService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ContainerManagementProtocolService ------------------------------------------

  void startContainers(::google::protobuf::RpcController* controller,
                       const ::hadoop::yarn::StartContainersRequestProto* request,
                       ::hadoop::yarn::StartContainersResponseProto* response,
                       ::google::protobuf::Closure* done);
  void stopContainers(::google::protobuf::RpcController* controller,
                       const ::hadoop::yarn::StopContainersRequestProto* request,
                       ::hadoop::yarn::StopContainersResponseProto* response,
                       ::google::protobuf::Closure* done);
  void getContainerStatuses(::google::protobuf::RpcController* controller,
                       const ::hadoop::yarn::GetContainerStatusesRequestProto* request,
                       ::hadoop::yarn::GetContainerStatusesResponseProto* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ContainerManagementProtocolService_Stub);
};


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace yarn
}  // namespace hadoop

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_containermanagement_5fprotocol_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yarn_service_protos.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "yarn_service_protos.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace hadoop {
namespace yarn {

namespace {

const ::google::protobuf::Descriptor* RegisterApplicationMasterRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegisterApplicationMasterRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegisterApplicationMasterResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegisterApplicationMasterResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* FinishApplicationMasterRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FinishApplicationMasterRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* FinishApplicationMasterResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FinishApplicationMasterResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllocateRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllocateRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NMTokenProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NMTokenProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllocateResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllocateResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNewApplicationRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNewApplicationRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNewApplicationResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNewApplicationResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetApplicationReportRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetApplicationReportRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetApplicationReportResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetApplicationReportResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubmitApplicationRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubmitApplicationRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubmitApplicationResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubmitApplicationResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* KillApplicationRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KillApplicationRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* KillApplicationResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KillApplicationResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClusterMetricsRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClusterMetricsRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClusterMetricsResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClusterMetricsResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetApplicationsRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetApplicationsRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetApplicationsResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetApplicationsResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClusterNodesRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClusterNodesRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClusterNodesResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClusterNodesResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetQueueInfoRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetQueueInfoRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetQueueInfoResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetQueueInfoResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetQueueUserAclsInfoRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetQueueUserAclsInfoRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetQueueUserAclsInfoResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetQueueUserAclsInfoResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartContainerRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartContainerRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartContainerResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartContainerResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* StopContainerRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StopContainerRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* StopContainerResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StopContainerResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetContainerStatusRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetContainerStatusRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetContainerStatusResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetContainerStatusResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartContainersRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartContainersRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContainerExceptionMapProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContainerExceptionMapProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartContainersResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartContainersResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* StopContainersRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StopContainersRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* StopContainersResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StopContainersResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetContainerStatusesRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetContainerStatusesRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetContainerStatusesResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetContainerStatusesResponseProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_yarn_5fservice_5fprotos_2eproto() {
  protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "yarn_service_protos.proto");
  GOOGLE_CHECK(file != NULL);
  RegisterApplicationMasterRequestProto_descriptor_ = file->message_type(0);
  static const int RegisterApplicationMasterRequestProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterApplicationMasterRequestProto, host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterApplicationMasterRequestProto, rpc_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterApplicationMasterRequestProto, tracking_url_),
  };
  RegisterApplicationMasterRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RegisterApplicationMasterRequestProto_descriptor_,
      RegisterApplicationMasterRequestProto::default_instance_,
      RegisterApplicationMasterRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterApplicationMasterRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterApplicationMasterRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RegisterApplicationMasterRequestProto));
  RegisterApplicationMasterResponseProto_descriptor_ = file->message_type(1);
  static const int RegisterApplicationMasterResponseProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterApplicationMasterResponseProto, maximumcapability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterApplicationMasterResponseProto, client_to_am_token_master_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterApplicationMasterResponseProto, application_acls_),
  };
  RegisterApplicationMasterResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RegisterApplicationMasterResponseProto_descriptor_,
      RegisterApplicationMasterResponseProto::default_instance_,
      RegisterApplicationMasterResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterApplicationMasterResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterApplicationMasterResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RegisterApplicationMasterResponseProto));
  FinishApplicationMasterRequestProto_descriptor_ = file->message_type(2);
  static const int FinishApplicationMasterRequestProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishApplicationMasterRequestProto, diagnostics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishApplicationMasterRequestProto, tracking_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishApplicationMasterRequestProto, final_application_status_),
  };
  FinishApplicationMasterRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FinishApplicationMasterRequestProto_descriptor_,
      FinishApplicationMasterRequestProto::default_instance_,
      FinishApplicationMasterRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishApplicationMasterRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishApplicationMasterRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FinishApplicationMasterRequestProto));
  FinishApplicationMasterResponseProto_descriptor_ = file->message_type(3);
  static const int FinishApplicationMasterResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishApplicationMasterResponseProto, isunregistered_),
  };
  FinishApplicationMasterResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FinishApplicationMasterResponseProto_descriptor_,
      FinishApplicationMasterResponseProto::default_instance_,
      FinishApplicationMasterResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishApplicationMasterResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishApplicationMasterResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FinishApplicationMasterResponseProto));
  AllocateRequestProto_descriptor_ = file->message_type(4);
  static const int AllocateRequestProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateRequestProto, ask_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateRequestProto, release_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateRequestProto, blacklist_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateRequestProto, response_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateRequestProto, progress_),
  };
  AllocateRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AllocateRequestProto_descriptor_,
      AllocateRequestProto::default_instance_,
      AllocateRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AllocateRequestProto));
  NMTokenProto_descriptor_ = file->message_type(5);
  static const int NMTokenProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NMTokenProto, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NMTokenProto, token_),
  };
  NMTokenProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NMTokenProto_descriptor_,
      NMTokenProto::default_instance_,
      NMTokenProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NMTokenProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NMTokenProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NMTokenProto));
  AllocateResponseProto_descriptor_ = file->message_type(6);
  static const int AllocateResponseProto_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResponseProto, a_m_command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResponseProto, response_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResponseProto, allocated_containers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResponseProto, completed_container_statuses_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResponseProto, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResponseProto, updated_nodes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResponseProto, num_cluster_nodes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResponseProto, preempt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResponseProto, nm_tokens_),
  };
  AllocateResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AllocateResponseProto_descriptor_,
      AllocateResponseProto::default_instance_,
      AllocateResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AllocateResponseProto));
  GetNewApplicationRequestProto_descriptor_ = file->message_type(7);
  static const int GetNewApplicationRequestProto_offsets_[1] = {
  };
  GetNewApplicationRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetNewApplicationRequestProto_descriptor_,
      GetNewApplicationRequestProto::default_instance_,
      GetNewApplicationRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewApplicationRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewApplicationRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetNewApplicationRequestProto));
  GetNewApplicationResponseProto_descriptor_ = file->message_type(8);
  static const int GetNewApplicationResponseProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewApplicationResponseProto, application_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewApplicationResponseProto, maximumcapability_),
  };
  GetNewApplicationResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetNewApplicationResponseProto_descriptor_,
      GetNewApplicationResponseProto::default_instance_,
      GetNewApplicationResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewApplicationResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNewApplicationResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetNewApplicationResponseProto));
  GetApplicationReportRequestProto_descriptor_ = file->message_type(9);
  static const int GetApplicationReportRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationReportRequestProto, application_id_),
  };
  GetApplicationReportRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetApplicationReportRequestProto_descriptor_,
      GetApplicationReportRequestProto::default_instance_,
      GetApplicationReportRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationReportRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationReportRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetApplicationReportRequestProto));
  GetApplicationReportResponseProto_descriptor_ = file->message_type(10);
  static const int GetApplicationReportResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationReportResponseProto, application_report_),
  };
  GetApplicationReportResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetApplicationReportResponseProto_descriptor_,
      GetApplicationReportResponseProto::default_instance_,
      GetApplicationReportResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationReportResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationReportResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetApplicationReportResponseProto));
  SubmitApplicationRequestProto_descriptor_ = file->message_type(11);
  static const int SubmitApplicationRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitApplicationRequestProto, application_submission_context_),
  };
  SubmitApplicationRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubmitApplicationRequestProto_descriptor_,
      SubmitApplicationRequestProto::default_instance_,
      SubmitApplicationRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitApplicationRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitApplicationRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubmitApplicationRequestProto));
  SubmitApplicationResponseProto_descriptor_ = file->message_type(12);
  static const int SubmitApplicationResponseProto_offsets_[1] = {
  };
  SubmitApplicationResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubmitApplicationResponseProto_descriptor_,
      SubmitApplicationResponseProto::default_instance_,
      SubmitApplicationResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitApplicationResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitApplicationResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubmitApplicationResponseProto));
  KillApplicationRequestProto_descriptor_ = file->message_type(13);
  static const int KillApplicationRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillApplicationRequestProto, application_id_),
  };
  KillApplicationRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      KillApplicationRequestProto_descriptor_,
      KillApplicationRequestProto::default_instance_,
      KillApplicationRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillApplicationRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillApplicationRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(KillApplicationRequestProto));
  KillApplicationResponseProto_descriptor_ = file->message_type(14);
  static const int KillApplicationResponseProto_offsets_[1] = {
  };
  KillApplicationResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      KillApplicationResponseProto_descriptor_,
      KillApplicationResponseProto::default_instance_,
      KillApplicationResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillApplicationResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillApplicationResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(KillApplicationResponseProto));
  GetClusterMetricsRequestProto_descriptor_ = file->message_type(15);
  static const int GetClusterMetricsRequestProto_offsets_[1] = {
  };
  GetClusterMetricsRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetClusterMetricsRequestProto_descriptor_,
      GetClusterMetricsRequestProto::default_instance_,
      GetClusterMetricsRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterMetricsRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterMetricsRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetClusterMetricsRequestProto));
  GetClusterMetricsResponseProto_descriptor_ = file->message_type(16);
  static const int GetClusterMetricsResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterMetricsResponseProto, cluster_metrics_),
  };
  GetClusterMetricsResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetClusterMetricsResponseProto_descriptor_,
      GetClusterMetricsResponseProto::default_instance_,
      GetClusterMetricsResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterMetricsResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterMetricsResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetClusterMetricsResponseProto));
  GetApplicationsRequestProto_descriptor_ = file->message_type(17);
  static const int GetApplicationsRequestProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationsRequestProto, application_types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationsRequestProto, application_states_),
  };
  GetApplicationsRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetApplicationsRequestProto_descriptor_,
      GetApplicationsRequestProto::default_instance_,
      GetApplicationsRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationsRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationsRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetApplicationsRequestProto));
  GetApplicationsResponseProto_descriptor_ = file->message_type(18);
  static const int GetApplicationsResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationsResponseProto, applications_),
  };
  GetApplicationsResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetApplicationsResponseProto_descriptor_,
      GetApplicationsResponseProto::default_instance_,
      GetApplicationsResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationsResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetApplicationsResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetApplicationsResponseProto));
  GetClusterNodesRequestProto_descriptor_ = file->message_type(19);
  static const int GetClusterNodesRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterNodesRequestProto, nodestates_),
  };
  GetClusterNodesRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetClusterNodesRequestProto_descriptor_,
      GetClusterNodesRequestProto::default_instance_,
      GetClusterNodesRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterNodesRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterNodesRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetClusterNodesRequestProto));
  GetClusterNodesResponseProto_descriptor_ = file->message_type(20);
  static const int GetClusterNodesResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterNodesResponseProto, nodereports_),
  };
  GetClusterNodesResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetClusterNodesResponseProto_descriptor_,
      GetClusterNodesResponseProto::default_instance_,
      GetClusterNodesResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterNodesResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterNodesResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetClusterNodesResponseProto));
  GetQueueInfoRequestProto_descriptor_ = file->message_type(21);
  static const int GetQueueInfoRequestProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueInfoRequestProto, queuename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueInfoRequestProto, includeapplications_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueInfoRequestProto, includechildqueues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueInfoRequestProto, recursive_),
  };
  GetQueueInfoRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetQueueInfoRequestProto_descriptor_,
      GetQueueInfoRequestProto::default_instance_,
      GetQueueInfoRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueInfoRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueInfoRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetQueueInfoRequestProto));
  GetQueueInfoResponseProto_descriptor_ = file->message_type(22);
  static const int GetQueueInfoResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueInfoResponseProto, queueinfo_),
  };
  GetQueueInfoResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetQueueInfoResponseProto_descriptor_,
      GetQueueInfoResponseProto::default_instance_,
      GetQueueInfoResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueInfoResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueInfoResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetQueueInfoResponseProto));
  GetQueueUserAclsInfoRequestProto_descriptor_ = file->message_type(23);
  static const int GetQueueUserAclsInfoRequestProto_offsets_[1] = {
  };
  GetQueueUserAclsInfoRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetQueueUserAclsInfoRequestProto_descriptor_,
      GetQueueUserAclsInfoRequestProto::default_instance_,
      GetQueueUserAclsInfoRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueUserAclsInfoRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueUserAclsInfoRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetQueueUserAclsInfoRequestProto));
  GetQueueUserAclsInfoResponseProto_descriptor_ = file->message_type(24);
  static const int GetQueueUserAclsInfoResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueUserAclsInfoResponseProto, queueuseracls_),
  };
  GetQueueUserAclsInfoResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetQueueUserAclsInfoResponseProto_descriptor_,
      GetQueueUserAclsInfoResponseProto::default_instance_,
      GetQueueUserAclsInfoResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueUserAclsInfoResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetQueueUserAclsInfoResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetQueueUserAclsInfoResponseProto));
  StartContainerRequestProto_descriptor_ = file->message_type(25);
  static const int StartContainerRequestProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainerRequestProto, container_launch_context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainerRequestProto, container_token_),
  };
  StartContainerRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StartContainerRequestProto_descriptor_,
      StartContainerRequestProto::default_instance_,
      StartContainerRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainerRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainerRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StartContainerRequestProto));
  StartContainerResponseProto_descriptor_ = file->message_type(26);
  static const int StartContainerResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainerResponseProto, services_meta_data_),
  };
  StartContainerResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StartContainerResponseProto_descriptor_,
      StartContainerResponseProto::default_instance_,
      StartContainerResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainerResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainerResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StartContainerResponseProto));
  StopContainerRequestProto_descriptor_ = file->message_type(27);
  static const int StopContainerRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopContainerRequestProto, container_id_),
  };
  StopContainerRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StopContainerRequestProto_descriptor_,
      StopContainerRequestProto::default_instance_,
      StopContainerRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopContainerRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopContainerRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StopContainerRequestProto));
  StopContainerResponseProto_descriptor_ = file->message_type(28);
  static const int StopContainerResponseProto_offsets_[1] = {
  };
  StopContainerResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StopContainerResponseProto_descriptor_,
      StopContainerResponseProto::default_instance_,
      StopContainerResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopContainerResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopContainerResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StopContainerResponseProto));
  GetContainerStatusRequestProto_descriptor_ = file->message_type(29);
  static const int GetContainerStatusRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusRequestProto, container_id_),
  };
  GetContainerStatusRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetContainerStatusRequestProto_descriptor_,
      GetContainerStatusRequestProto::default_instance_,
      GetContainerStatusRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetContainerStatusRequestProto));
  GetContainerStatusResponseProto_descriptor_ = file->message_type(30);
  static const int GetContainerStatusResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusResponseProto, status_),
  };
  GetContainerStatusResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetContainerStatusResponseProto_descriptor_,
      GetContainerStatusResponseProto::default_instance_,
      GetContainerStatusResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetContainerStatusResponseProto));
  StartContainersRequestProto_descriptor_ = file->message_type(31);
  static const int StartContainersRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainersRequestProto, start_container_request_),
  };
  StartContainersRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StartContainersRequestProto_descriptor_,
      StartContainersRequestProto::default_instance_,
      StartContainersRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainersRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainersRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StartContainersRequestProto));
  ContainerExceptionMapProto_descriptor_ = file->message_type(32);
  static const int ContainerExceptionMapProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContainerExceptionMapProto, container_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContainerExceptionMapProto, exception_),
  };
  ContainerExceptionMapProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ContainerExceptionMapProto_descriptor_,
      ContainerExceptionMapProto::default_instance_,
      ContainerExceptionMapProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContainerExceptionMapProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContainerExceptionMapProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ContainerExceptionMapProto));
  StartContainersResponseProto_descriptor_ = file->message_type(33);
  static const int StartContainersResponseProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainersResponseProto, services_meta_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainersResponseProto, succeeded_requests_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainersResponseProto, failed_requests_),
  };
  StartContainersResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StartContainersResponseProto_descriptor_,
      StartContainersResponseProto::default_instance_,
      StartContainersResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainersResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartContainersResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StartContainersResponseProto));
  StopContainersRequestProto_descriptor_ = file->message_type(34);
  static const int StopContainersRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopContainersRequestProto, container_id_),
  };
  StopContainersRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StopContainersRequestProto_descriptor_,
      StopContainersRequestProto::default_instance_,
      StopContainersRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopContainersRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopContainersRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StopContainersRequestProto));
  StopContainersResponseProto_descriptor_ = file->message_type(35);
  static const int StopContainersResponseProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopContainersResponseProto, succeeded_requests_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopContainersResponseProto, failed_requests_),
  };
  StopContainersResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StopContainersResponseProto_descriptor_,
      StopContainersResponseProto::default_instance_,
      StopContainersResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopContainersResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopContainersResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StopContainersResponseProto));
  GetContainerStatusesRequestProto_descriptor_ = file->message_type(36);
  static const int GetContainerStatusesRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusesRequestProto, container_id_),
  };
  GetContainerStatusesRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetContainerStatusesRequestProto_descriptor_,
      GetContainerStatusesRequestProto::default_instance_,
      GetContainerStatusesRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusesRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusesRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetContainerStatusesRequestProto));
  GetContainerStatusesResponseProto_descriptor_ = file->message_type(37);
  static const int GetContainerStatusesResponseProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusesResponseProto, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusesResponseProto, failed_requests_),
  };
  GetContainerStatusesResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetContainerStatusesResponseProto_descriptor_,
      GetContainerStatusesResponseProto::default_instance_,
      GetContainerStatusesResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusesResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetContainerStatusesResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetContainerStatusesResponseProto));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_yarn_5fservice_5fprotos_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RegisterApplicationMasterRequestProto_descriptor_, &RegisterApplicationMasterRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RegisterApplicationMasterResponseProto_descriptor_, &RegisterApplicationMasterResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FinishApplicationMasterRequestProto_descriptor_, &FinishApplicationMasterRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FinishApplicationMasterResponseProto_descriptor_, &FinishApplicationMasterResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AllocateRequestProto_descriptor_, &AllocateRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NMTokenProto_descriptor_, &NMTokenProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AllocateResponseProto_descriptor_, &AllocateResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetNewApplicationRequestProto_descriptor_, &GetNewApplicationRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetNewApplicationResponseProto_descriptor_, &GetNewApplicationResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetApplicationReportRequestProto_descriptor_, &GetApplicationReportRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetApplicationReportResponseProto_descriptor_, &GetApplicationReportResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubmitApplicationRequestProto_descriptor_, &SubmitApplicationRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubmitApplicationResponseProto_descriptor_, &SubmitApplicationResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    KillApplicationRequestProto_descriptor_, &KillApplicationRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    KillApplicationResponseProto_descriptor_, &KillApplicationResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetClusterMetricsRequestProto_descriptor_, &GetClusterMetricsRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetClusterMetricsResponseProto_descriptor_, &GetClusterMetricsResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetApplicationsRequestProto_descriptor_, &GetApplicationsRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetApplicationsResponseProto_descriptor_, &GetApplicationsResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetClusterNodesRequestProto_descriptor_, &GetClusterNodesRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetClusterNodesResponseProto_descriptor_, &GetClusterNodesResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetQueueInfoRequestProto_descriptor_, &GetQueueInfoRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetQueueInfoResponseProto_descriptor_, &GetQueueInfoResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetQueueUserAclsInfoRequestProto_descriptor_, &GetQueueUserAclsInfoRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetQueueUserAclsInfoResponseProto_descriptor_, &GetQueueUserAclsInfoResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StartContainerRequestProto_descriptor_, &StartContainerRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StartContainerResponseProto_descriptor_, &StartContainerResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StopContainerRequestProto_descriptor_, &StopContainerRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StopContainerResponseProto_descriptor_, &StopContainerResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetContainerStatusRequestProto_descriptor_, &GetContainerStatusRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetContainerStatusResponseProto_descriptor_, &GetContainerStatusResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StartContainersRequestProto_descriptor_, &StartContainersRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ContainerExceptionMapProto_descriptor_, &ContainerExceptionMapProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StartContainersResponseProto_descriptor_, &StartContainersResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StopContainersRequestProto_descriptor_, &StopContainersRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StopContainersResponseProto_descriptor_, &StopContainersResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetContainerStatusesRequestProto_descriptor_, &GetContainerStatusesRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetContainerStatusesResponseProto_descriptor_, &GetContainerStatusesResponseProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_yarn_5fservice_5fprotos_2eproto() {
  delete RegisterApplicationMasterRequestProto::default_instance_;
  delete RegisterApplicationMasterRequestProto_reflection_;
  delete RegisterApplicationMasterResponseProto::default_instance_;
  delete RegisterApplicationMasterResponseProto_reflection_;
  delete FinishApplicationMasterRequestProto::default_instance_;
  delete FinishApplicationMasterRequestProto_reflection_;
  delete FinishApplicationMasterResponseProto::default_instance_;
  delete FinishApplicationMasterResponseProto_reflection_;
  delete AllocateRequestProto::default_instance_;
  delete AllocateRequestProto_reflection_;
  delete NMTokenProto::default_instance_;
  delete NMTokenProto_reflection_;
  delete AllocateResponseProto::default_instance_;
  delete AllocateResponseProto_reflection_;
  delete GetNewApplicationRequestProto::default_instance_;
  delete GetNewApplicationRequestProto_reflection_;
  delete GetNewApplicationResponseProto::default_instance_;
  delete GetNewApplicationResponseProto_reflection_;
  delete GetApplicationReportRequestProto::default_instance_;
  delete GetApplicationReportRequestProto_reflection_;
  delete GetApplicationReportResponseProto::default_instance_;
  delete GetApplicationReportResponseProto_reflection_;
  delete SubmitApplicationRequestProto::default_instance_;
  delete SubmitApplicationRequestProto_reflection_;
  delete SubmitApplicationResponseProto::default_instance_;
  delete SubmitApplicationResponseProto_reflection_;
  delete KillApplicationRequestProto::default_instance_;
  delete KillApplicationRequestProto_reflection_;
  delete KillApplicationResponseProto::default_instance_;
  delete KillApplicationResponseProto_reflection_;
  delete GetClusterMetricsRequestProto::default_instance_;
  delete GetClusterMetricsRequestProto_reflection_;
  delete GetClusterMetricsResponseProto::default_instance_;
  delete GetClusterMetricsResponseProto_reflection_;
  delete GetApplicationsRequestProto::default_instance_;
  delete GetApplicationsRequestProto_reflection_;
  delete GetApplicationsResponseProto::default_instance_;
  delete GetApplicationsResponseProto_reflection_;
  delete GetClusterNodesRequestProto::default_instance_;
  delete GetClusterNodesRequestProto_reflection_;
  delete GetClusterNodesResponseProto::default_instance_;
  delete GetClusterNodesResponseProto_reflection_;
  delete GetQueueInfoRequestProto::default_instance_;
  delete GetQueueInfoRequestProto_reflection_;
  delete GetQueueInfoResponseProto::default_instance_;
  delete GetQueueInfoResponseProto_reflection_;
  delete GetQueueUserAclsInfoRequestProto::default_instance_;
  delete GetQueueUserAclsInfoRequestProto_reflection_;
  delete GetQueueUserAclsInfoResponseProto::default_instance_;
  delete GetQueueUserAclsInfoResponseProto_reflection_;
  delete StartContainerRequestProto::default_instance_;
  delete StartContainerRequestProto_reflection_;
  delete StartContainerResponseProto::default_instance_;
  delete StartContainerResponseProto_reflection_;
  delete StopContainerRequestProto::default_instance_;
  delete StopContainerRequestProto_reflection_;
  delete StopContainerResponseProto::default_instance_;
  delete StopContainerResponseProto_reflection_;
  delete GetContainerStatusRequestProto::default_instance_;
  delete GetContainerStatusRequestProto_reflection_;
  delete GetContainerStatusResponseProto::default_instance_;
  delete GetContainerStatusResponseProto_reflection_;
  delete StartContainersRequestProto::default_instance_;
  delete StartContainersRequestProto_reflection_;
  delete ContainerExceptionMapProto::default_instance_;
  delete ContainerExceptionMapProto_reflection_;
  delete StartContainersResponseProto::default_instance_;
  delete StartContainersResponseProto_reflection_;
  delete StopContainersRequestProto::default_instance_;
  delete StopContainersRequestProto_reflection_;
  delete StopContainersResponseProto::default_instance_;
  delete StopContainersResponseProto_reflection_;
  delete GetContainerStatusesRequestProto::default_instance_;
  delete GetContainerStatusesRequestProto_reflection_;
  delete GetContainerStatusesResponseProto::default_instance_;
  delete GetContainerStatusesResponseProto_reflection_;
}

void protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::hadoop::common::protobuf_AddDesc_Security_2eproto();
  ::hadoop::yarn::protobuf_AddDesc_yarn_5fprotos_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031yarn_service_protos.proto\022\013hadoop.yarn"
    "\032\016Security.proto\032\021yarn_protos.proto\"]\n%R"
    "egisterApplicationMasterRequestProto\022\014\n\004"
    "host\030\001 \001(\t\022\020\n\010rpc_port\030\002 \001(\005\022\024\n\014tracking"
    "_url\030\003 \001(\t\"\305\001\n&RegisterApplicationMaster"
    "ResponseProto\0225\n\021maximumCapability\030\001 \001(\013"
    "2\032.hadoop.yarn.ResourceProto\022%\n\035client_t"
    "o_am_token_master_key\030\002 \001(\014\022=\n\020applicati"
    "on_ACLs\030\003 \003(\0132#.hadoop.yarn.ApplicationA"
    "CLMapProto\"\234\001\n#FinishApplicationMasterRe"
    "questProto\022\023\n\013diagnostics\030\001 \001(\t\022\024\n\014track"
    "ing_url\030\002 \001(\t\022J\n\030final_application_statu"
    "s\030\003 \001(\0162(.hadoop.yarn.FinalApplicationSt"
    "atusProto\"E\n$FinishApplicationMasterResp"
    "onseProto\022\035\n\016isUnregistered\030\001 \001(\010:\005false"
    "\"\344\001\n\024AllocateRequestProto\022.\n\003ask\030\001 \003(\0132!"
    ".hadoop.yarn.ResourceRequestProto\022.\n\007rel"
    "ease\030\002 \003(\0132\035.hadoop.yarn.ContainerIdProt"
    "o\022E\n\021blacklist_request\030\003 \001(\0132*.hadoop.ya"
    "rn.ResourceBlacklistRequestProto\022\023\n\013resp"
    "onse_id\030\004 \001(\005\022\020\n\010progress\030\005 \001(\002\"b\n\014NMTok"
    "enProto\022(\n\006nodeId\030\001 \001(\0132\030.hadoop.yarn.No"
    "deIdProto\022(\n\005token\030\002 \001(\0132\031.hadoop.common"
    ".TokenProto\"\301\003\n\025AllocateResponseProto\0220\n"
    "\013a_m_command\030\001 \001(\0162\033.hadoop.yarn.AMComma"
    "ndProto\022\023\n\013response_id\030\002 \001(\005\0229\n\024allocate"
    "d_containers\030\003 \003(\0132\033.hadoop.yarn.Contain"
    "erProto\022G\n\034completed_container_statuses\030"
    "\004 \003(\0132!.hadoop.yarn.ContainerStatusProto"
    "\022)\n\005limit\030\005 \001(\0132\032.hadoop.yarn.ResourcePr"
    "oto\0223\n\rupdated_nodes\030\006 \003(\0132\034.hadoop.yarn"
    ".NodeReportProto\022\031\n\021num_cluster_nodes\030\007 "
    "\001(\005\0224\n\007preempt\030\010 \001(\0132#.hadoop.yarn.Preem"
    "ptionMessageProto\022,\n\tnm_tokens\030\t \003(\0132\031.h"
    "adoop.yarn.NMTokenProto\"\037\n\035GetNewApplica"
    "tionRequestProto\"\220\001\n\036GetNewApplicationRe"
    "sponseProto\0227\n\016application_id\030\001 \001(\0132\037.ha"
    "doop.yarn.ApplicationIdProto\0225\n\021maximumC"
    "apability\030\002 \001(\0132\032.hadoop.yarn.ResourcePr"
    "oto\"[\n GetApplicationReportRequestProto\022"
    "7\n\016application_id\030\001 \001(\0132\037.hadoop.yarn.Ap"
    "plicationIdProto\"d\n!GetApplicationReport"
    "ResponseProto\022\?\n\022application_report\030\001 \001("
    "\0132#.hadoop.yarn.ApplicationReportProto\"w"
    "\n\035SubmitApplicationRequestProto\022V\n\036appli"
    "cation_submission_context\030\001 \001(\0132..hadoop"
    ".yarn.ApplicationSubmissionContextProto\""
    " \n\036SubmitApplicationResponseProto\"V\n\033Kil"
    "lApplicationRequestProto\0227\n\016application_"
    "id\030\001 \001(\0132\037.hadoop.yarn.ApplicationIdProt"
    "o\"\036\n\034KillApplicationResponseProto\"\037\n\035Get"
    "ClusterMetricsRequestProto\"_\n\036GetCluster"
    "MetricsResponseProto\022=\n\017cluster_metrics\030"
    "\001 \001(\0132$.hadoop.yarn.YarnClusterMetricsPr"
    "oto\"|\n\033GetApplicationsRequestProto\022\031\n\021ap"
    "plication_types\030\001 \003(\t\022B\n\022application_sta"
    "tes\030\002 \003(\0162&.hadoop.yarn.YarnApplicationS"
    "tateProto\"Y\n\034GetApplicationsResponseProt"
    "o\0229\n\014applications\030\001 \003(\0132#.hadoop.yarn.Ap"
    "plicationReportProto\"N\n\033GetClusterNodesR"
    "equestProto\022/\n\nnodeStates\030\001 \003(\0162\033.hadoop"
    ".yarn.NodeStateProto\"Q\n\034GetClusterNodesR"
    "esponseProto\0221\n\013nodeReports\030\001 \003(\0132\034.hado"
    "op.yarn.NodeReportProto\"y\n\030GetQueueInfoR"
    "equestProto\022\021\n\tqueueName\030\001 \001(\t\022\033\n\023includ"
    "eApplications\030\002 \001(\010\022\032\n\022includeChildQueue"
    "s\030\003 \001(\010\022\021\n\trecursive\030\004 \001(\010\"K\n\031GetQueueIn"
    "foResponseProto\022.\n\tqueueInfo\030\001 \001(\0132\033.had"
    "oop.yarn.QueueInfoProto\"\"\n GetQueueUserA"
    "clsInfoRequestProto\"^\n!GetQueueUserAclsI"
    "nfoResponseProto\0229\n\rqueueUserAcls\030\001 \003(\0132"
    "\".hadoop.yarn.QueueUserACLInfoProto\"\234\001\n\032"
    "StartContainerRequestProto\022J\n\030container_"
    "launch_context\030\001 \001(\0132(.hadoop.yarn.Conta"
    "inerLaunchContextProto\0222\n\017container_toke"
    "n\030\002 \001(\0132\031.hadoop.common.TokenProto\"[\n\033St"
    "artContainerResponseProto\022<\n\022services_me"
    "ta_data\030\001 \003(\0132 .hadoop.yarn.StringBytesM"
    "apProto\"P\n\031StopContainerRequestProto\0223\n\014"
    "container_id\030\001 \001(\0132\035.hadoop.yarn.Contain"
    "erIdProto\"\034\n\032StopContainerResponseProto\""
    "U\n\036GetContainerStatusRequestProto\0223\n\014con"
    "tainer_id\030\001 \001(\0132\035.hadoop.yarn.ContainerI"
    "dProto\"T\n\037GetContainerStatusResponseProt"
    "o\0221\n\006status\030\001 \001(\0132!.hadoop.yarn.Containe"
    "rStatusProto\"g\n\033StartContainersRequestPr"
    "oto\022H\n\027start_container_request\030\001 \003(\0132\'.h"
    "adoop.yarn.StartContainerRequestProto\"\213\001"
    "\n\032ContainerExceptionMapProto\0223\n\014containe"
    "r_id\030\001 \001(\0132\035.hadoop.yarn.ContainerIdProt"
    "o\0228\n\texception\030\002 \001(\0132%.hadoop.yarn.Seria"
    "lizedExceptionProto\"\331\001\n\034StartContainersR"
    "esponseProto\022<\n\022services_meta_data\030\001 \003(\013"
    "2 .hadoop.yarn.StringBytesMapProto\0229\n\022su"
    "cceeded_requests\030\002 \003(\0132\035.hadoop.yarn.Con"
    "tainerIdProto\022@\n\017failed_requests\030\003 \003(\0132\'"
    ".hadoop.yarn.ContainerExceptionMapProto\""
    "Q\n\032StopContainersRequestProto\0223\n\014contain"
    "er_id\030\001 \003(\0132\035.hadoop.yarn.ContainerIdPro"
    "to\"\232\001\n\033StopContainersResponseProto\0229\n\022su"
    "cceeded_requests\030\001 \003(\0132\035.hadoop.yarn.Con"
    "tainerIdProto\022@\n\017failed_requests\030\002 \003(\0132\'"
    ".hadoop.yarn.ContainerExceptionMapProto\""
    "W\n GetContainerStatusesRequestProto\0223\n\014c"
    "ontainer_id\030\001 \003(\0132\035.hadoop.yarn.Containe"
    "rIdProto\"\230\001\n!GetContainerStatusesRespons"
    "eProto\0221\n\006status\030\001 \003(\0132!.hadoop.yarn.Con"
    "tainerStatusProto\022@\n\017failed_requests\030\002 \003"
    "(\0132\'.hadoop.yarn.ContainerExceptionMapPr"
    "otoB7\n\034org.apache.hadoop.yarn.protoB\021Yar"
    "nServiceProtos\210\001\001\240\001\001", 4420);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "yarn_service_protos.proto", &protobuf_RegisterTypes);
  RegisterApplicationMasterRequestProto::default_instance_ = new RegisterApplicationMasterRequestProto();
  RegisterApplicationMasterResponseProto::default_instance_ = new RegisterApplicationMasterResponseProto();
  FinishApplicationMasterRequestProto::default_instance_ = new FinishApplicationMasterRequestProto();
  FinishApplicationMasterResponseProto::default_instance_ = new FinishApplicationMasterResponseProto();
  AllocateRequestProto::default_instance_ = new AllocateRequestProto();
  NMTokenProto::default_instance_ = new NMTokenProto();
  AllocateResponseProto::default_instance_ = new AllocateResponseProto();
  GetNewApplicationRequestProto::default_instance_ = new GetNewApplicationRequestProto();
  GetNewApplicationResponseProto::default_instance_ = new GetNewApplicationResponseProto();
  GetApplicationReportRequestProto::default_instance_ = new GetApplicationReportRequestProto();
  GetApplicationReportResponseProto::default_instance_ = new GetApplicationReportResponseProto();
  SubmitApplicationRequestProto::default_instance_ = new SubmitApplicationRequestProto();
  SubmitApplicationResponseProto::default_instance_ = new SubmitApplicationResponseProto();
  KillApplicationRequestProto::default_instance_ = new KillApplicationRequestProto();
  KillApplicationResponseProto::default_instance_ = new KillApplicationResponseProto();
  GetClusterMetricsRequestProto::default_instance_ = new GetClusterMetricsRequestProto();
  GetClusterMetricsResponseProto::default_instance_ = new GetClusterMetricsResponseProto();
  GetApplicationsRequestProto::default_instance_ = new GetApplicationsRequestProto();
  GetApplicationsResponseProto::default_instance_ = new GetApplicationsResponseProto();
  GetClusterNodesRequestProto::default_instance_ = new GetClusterNodesRequestProto();
  GetClusterNodesResponseProto::default_instance_ = new GetClusterNodesResponseProto();
  GetQueueInfoRequestProto::default_instance_ = new GetQueueInfoRequestProto();
  GetQueueInfoResponseProto::default_instance_ = new GetQueueInfoResponseProto();
  GetQueueUserAclsInfoRequestProto::default_instance_ = new GetQueueUserAclsInfoRequestProto();
  GetQueueUserAclsInfoResponseProto::default_instance_ = new GetQueueUserAclsInfoResponseProto();
  StartContainerRequestProto::default_instance_ = new StartContainerRequestProto();
  StartContainerResponseProto::default_instance_ = new StartContainerResponseProto();
  StopContainerRequestProto::default_instance_ = new StopContainerRequestProto();
  StopContainerResponseProto::default_instance_ = new StopContainerResponseProto();
  GetContainerStatusRequestProto::default_instance_ = new GetContainerStatusRequestProto();
  GetContainerStatusResponseProto::default_instance_ = new GetContainerStatusResponseProto();
  StartContainersRequestProto::default_instance_ = new StartContainersRequestProto();
  ContainerExceptionMapProto::default_instance_ = new ContainerExceptionMapProto();
  StartContainersResponseProto::default_instance_ = new StartContainersResponseProto();
  StopContainersRequestProto::default_instance_ = new StopContainersRequestProto();
  StopContainersResponseProto::default_instance_ = new StopContainersResponseProto();
  GetContainerStatusesRequestProto::default_instance_ = new GetContainerStatusesRequestProto();
  GetContainerStatusesResponseProto::default_instance_ = new GetContainerStatusesResponseProto();
  RegisterApplicationMasterRequestProto::default_instance_->InitAsDefaultInstance();
  RegisterApplicationMasterResponseProto::default_instance_->InitAsDefaultInstance();
  FinishApplicationMasterRequestProto::default_instance_->InitAsDefaultInstance();
  FinishApplicationMasterResponseProto::default_instance_->InitAsDefaultInstance();
  AllocateRequestProto::default_instance_->InitAsDefaultInstance();
  NMTokenProto::default_instance_->InitAsDefaultInstance();
  AllocateResponseProto::default_instance_->InitAsDefaultInstance();
  GetNewApplicationRequestProto::default_instance_->InitAsDefaultInstance();
  GetNewApplicationResponseProto::default_instance_->InitAsDefaultInstance();
  GetApplicationReportRequestProto::default_instance_->InitAsDefaultInstance();
  GetApplicationReportResponseProto::default_instance_->InitAsDefaultInstance();
  SubmitApplicationRequestProto::default_instance_->InitAsDefaultInstance();
  SubmitApplicationResponseProto::default_instance_->InitAsDefaultInstance();
  KillApplicationRequestProto::default_instance_->InitAsDefaultInstance();
  KillApplicationResponseProto::default_instance_->InitAsDefaultInstance();
  GetClusterMetricsRequestProto::default_instance_->InitAsDefaultInstance();
  GetClusterMetricsResponseProto::default_instance_->InitAsDefaultInstance();
  GetApplicationsRequestProto::default_instance_->InitAsDefaultInstance();
  GetApplicationsResponseProto::default_instance_->InitAsDefaultInstance();
  GetClusterNodesRequestProto::default_instance_->InitAsDefaultInstance();
  GetClusterNodesResponseProto::default_instance_->InitAsDefaultInstance();
  GetQueueInfoRequestProto::default_instance_->InitAsDefaultInstance();
  GetQueueInfoResponseProto::default_instance_->InitAsDefaultInstance();
  GetQueueUserAclsInfoRequestProto::default_instance_->InitAsDefaultInstance();
  GetQueueUserAclsInfoResponseProto::default_instance_->InitAsDefaultInstance();
  StartContainerRequestProto::default_instance_->InitAsDefaultInstance();
  StartContainerResponseProto::default_instance_->InitAsDefaultInstance();
  StopContainerRequestProto::default_instance_->InitAsDefaultInstance();
  StopContainerResponseProto::default_instance_->InitAsDefaultInstance();
  GetContainerStatusRequestProto::default_instance_->InitAsDefaultInstance();
  GetContainerStatusResponseProto::default_instance_->InitAsDefaultInstance();
  StartContainersRequestProto::default_instance_->InitAsDefaultInstance();
  ContainerExceptionMapProto::default_instance_->InitAsDefaultInstance();
  StartContainersResponseProto::default_instance_->InitAsDefaultInstance();
  StopContainersRequestProto::default_instance_->InitAsDefaultInstance();
  StopContainersResponseProto::default_instance_->InitAsDefaultInstance();
  GetContainerStatusesRequestProto::default_instance_->InitAsDefaultInstance();
  GetContainerStatusesResponseProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_yarn_5fservice_5fprotos_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_yarn_5fservice_5fprotos_2eproto {
  StaticDescriptorInitializer_yarn_5fservice_5fprotos_2eproto() {
    protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  }
} static_descriptor_initializer_yarn_5fservice_5fprotos_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RegisterApplicationMasterRequestProto::kHostFieldNumber;
const int RegisterApplicationMasterRequestProto::kRpcPortFieldNumber;
const int RegisterApplicationMasterRequestProto::kTrackingUrlFieldNumber;
#endif  // !_MSC_VER

RegisterApplicationMasterRequestProto::RegisterApplicationMasterRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RegisterApplicationMasterRequestProto::InitAsDefaultInstance() {
}

RegisterApplicationMasterRequestProto::RegisterApplicationMasterRequestProto(const RegisterApplicationMasterRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RegisterApplicationMasterRequestProto::SharedCtor() {
  _cached_size_ = 0;
  host_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rpc_port_ = 0;
  tracking_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RegisterApplicationMasterRequestProto::~RegisterApplicationMasterRequestProto() {
  SharedDtor();
}

void RegisterApplicationMasterRequestProto::SharedDtor() {
  if (host_ != &::google::protobuf::internal::kEmptyString) {
    delete host_;
  }
  if (tracking_url_ != &::google::protobuf::internal::kEmptyString) {
    delete tracking_url_;
  }
  if (this != default_instance_) {
  }
}

void RegisterApplicationMasterRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterApplicationMasterRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegisterApplicationMasterRequestProto_descriptor_;
}

const RegisterApplicationMasterRequestProto& RegisterApplicationMasterRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

RegisterApplicationMasterRequestProto* RegisterApplicationMasterRequestProto::default_instance_ = NULL;

RegisterApplicationMasterRequestProto* RegisterApplicationMasterRequestProto::New() const {
  return new RegisterApplicationMasterRequestProto;
}

void RegisterApplicationMasterRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_host()) {
      if (host_ != &::google::protobuf::internal::kEmptyString) {
        host_->clear();
      }
    }
    rpc_port_ = 0;
    if (has_tracking_url()) {
      if (tracking_url_ != &::google::protobuf::internal::kEmptyString) {
        tracking_url_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RegisterApplicationMasterRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string host = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->host().data(), this->host().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rpc_port;
        break;
      }

      // optional int32 rpc_port = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rpc_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpc_port_)));
          set_has_rpc_port();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_tracking_url;
        break;
      }

      // optional string tracking_url = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tracking_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tracking_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tracking_url().data(), this->tracking_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RegisterApplicationMasterRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string host = 1;
  if (has_host()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->host(), output);
  }

  // optional int32 rpc_port = 2;
  if (has_rpc_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rpc_port(), output);
  }

  // optional string tracking_url = 3;
  if (has_tracking_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tracking_url().data(), this->tracking_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->tracking_url(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RegisterApplicationMasterRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string host = 1;
  if (has_host()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host(), target);
  }

  // optional int32 rpc_port = 2;
  if (has_rpc_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rpc_port(), target);
  }

  // optional string tracking_url = 3;
  if (has_tracking_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tracking_url().data(), this->tracking_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tracking_url(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RegisterApplicationMasterRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string host = 1;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional int32 rpc_port = 2;
    if (has_rpc_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rpc_port());
    }

    // optional string tracking_url = 3;
    if (has_tracking_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tracking_url());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterApplicationMasterRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RegisterApplicationMasterRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RegisterApplicationMasterRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RegisterApplicationMasterRequestProto::MergeFrom(const RegisterApplicationMasterRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_host()) {
      set_host(from.host());
    }
    if (from.has_rpc_port()) {
      set_rpc_port(from.rpc_port());
    }
    if (from.has_tracking_url()) {
      set_tracking_url(from.tracking_url());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RegisterApplicationMasterRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterApplicationMasterRequestProto::CopyFrom(const RegisterApplicationMasterRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterApplicationMasterRequestProto::IsInitialized() const {

  return true;
}

void RegisterApplicationMasterRequestProto::Swap(RegisterApplicationMasterRequestProto* other) {
  if (other != this) {
    std::swap(host_, other->host_);
    std::swap(rpc_port_, other->rpc_port_);
    std::swap(tracking_url_, other->tracking_url_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RegisterApplicationMasterRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegisterApplicationMasterRequestProto_descriptor_;
  metadata.reflection = RegisterApplicationMasterRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RegisterApplicationMasterResponseProto::kMaximumCapabilityFieldNumber;
const int RegisterApplicationMasterResponseProto::kClientToAmTokenMasterKeyFieldNumber;
const int RegisterApplicationMasterResponseProto::kApplicationACLsFieldNumber;
#endif  // !_MSC_VER

RegisterApplicationMasterResponseProto::RegisterApplicationMasterResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RegisterApplicationMasterResponseProto::InitAsDefaultInstance() {
  maximumcapability_ = const_cast< ::hadoop::yarn::ResourceProto*>(&::hadoop::yarn::ResourceProto::default_instance());
}

RegisterApplicationMasterResponseProto::RegisterApplicationMasterResponseProto(const RegisterApplicationMasterResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RegisterApplicationMasterResponseProto::SharedCtor() {
  _cached_size_ = 0;
  maximumcapability_ = NULL;
  client_to_am_token_master_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RegisterApplicationMasterResponseProto::~RegisterApplicationMasterResponseProto() {
  SharedDtor();
}

void RegisterApplicationMasterResponseProto::SharedDtor() {
  if (client_to_am_token_master_key_ != &::google::protobuf::internal::kEmptyString) {
    delete client_to_am_token_master_key_;
  }
  if (this != default_instance_) {
    delete maximumcapability_;
  }
}

void RegisterApplicationMasterResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterApplicationMasterResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegisterApplicationMasterResponseProto_descriptor_;
}

const RegisterApplicationMasterResponseProto& RegisterApplicationMasterResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

RegisterApplicationMasterResponseProto* RegisterApplicationMasterResponseProto::default_instance_ = NULL;

RegisterApplicationMasterResponseProto* RegisterApplicationMasterResponseProto::New() const {
  return new RegisterApplicationMasterResponseProto;
}

void RegisterApplicationMasterResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_maximumcapability()) {
      if (maximumcapability_ != NULL) maximumcapability_->::hadoop::yarn::ResourceProto::Clear();
    }
    if (has_client_to_am_token_master_key()) {
      if (client_to_am_token_master_key_ != &::google::protobuf::internal::kEmptyString) {
        client_to_am_token_master_key_->clear();
      }
    }
  }
  application_acls_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RegisterApplicationMasterResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.ResourceProto maximumCapability = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_maximumcapability()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_client_to_am_token_master_key;
        break;
      }

      // optional bytes client_to_am_token_master_key = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_client_to_am_token_master_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_client_to_am_token_master_key()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_application_ACLs;
        break;
      }

      // repeated .hadoop.yarn.ApplicationACLMapProto application_ACLs = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_application_ACLs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_application_acls()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_application_ACLs;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RegisterApplicationMasterResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.ResourceProto maximumCapability = 1;
  if (has_maximumcapability()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->maximumcapability(), output);
  }

  // optional bytes client_to_am_token_master_key = 2;
  if (has_client_to_am_token_master_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->client_to_am_token_master_key(), output);
  }

  // repeated .hadoop.yarn.ApplicationACLMapProto application_ACLs = 3;
  for (int i = 0; i < this->application_acls_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->application_acls(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RegisterApplicationMasterResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.ResourceProto maximumCapability = 1;
  if (has_maximumcapability()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->maximumcapability(), target);
  }

  // optional bytes client_to_am_token_master_key = 2;
  if (has_client_to_am_token_master_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->client_to_am_token_master_key(), target);
  }

  // repeated .hadoop.yarn.ApplicationACLMapProto application_ACLs = 3;
  for (int i = 0; i < this->application_acls_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->application_acls(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RegisterApplicationMasterResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.ResourceProto maximumCapability = 1;
    if (has_maximumcapability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->maximumcapability());
    }

    // optional bytes client_to_am_token_master_key = 2;
    if (has_client_to_am_token_master_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->client_to_am_token_master_key());
    }

  }
  // repeated .hadoop.yarn.ApplicationACLMapProto application_ACLs = 3;
  total_size += 1 * this->application_acls_size();
  for (int i = 0; i < this->application_acls_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->application_acls(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterApplicationMasterResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RegisterApplicationMasterResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RegisterApplicationMasterResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RegisterApplicationMasterResponseProto::MergeFrom(const RegisterApplicationMasterResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  application_acls_.MergeFrom(from.application_acls_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maximumcapability()) {
      mutable_maximumcapability()->::hadoop::yarn::ResourceProto::MergeFrom(from.maximumcapability());
    }
    if (from.has_client_to_am_token_master_key()) {
      set_client_to_am_token_master_key(from.client_to_am_token_master_key());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RegisterApplicationMasterResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterApplicationMasterResponseProto::CopyFrom(const RegisterApplicationMasterResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterApplicationMasterResponseProto::IsInitialized() const {

  return true;
}

void RegisterApplicationMasterResponseProto::Swap(RegisterApplicationMasterResponseProto* other) {
  if (other != this) {
    std::swap(maximumcapability_, other->maximumcapability_);
    std::swap(client_to_am_token_master_key_, other->client_to_am_token_master_key_);
    application_acls_.Swap(&other->application_acls_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RegisterApplicationMasterResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegisterApplicationMasterResponseProto_descriptor_;
  metadata.reflection = RegisterApplicationMasterResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FinishApplicationMasterRequestProto::kDiagnosticsFieldNumber;
const int FinishApplicationMasterRequestProto::kTrackingUrlFieldNumber;
const int FinishApplicationMasterRequestProto::kFinalApplicationStatusFieldNumber;
#endif  // !_MSC_VER

FinishApplicationMasterRequestProto::FinishApplicationMasterRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FinishApplicationMasterRequestProto::InitAsDefaultInstance() {
}

FinishApplicationMasterRequestProto::FinishApplicationMasterRequestProto(const FinishApplicationMasterRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FinishApplicationMasterRequestProto::SharedCtor() {
  _cached_size_ = 0;
  diagnostics_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  tracking_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  final_application_status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FinishApplicationMasterRequestProto::~FinishApplicationMasterRequestProto() {
  SharedDtor();
}

void FinishApplicationMasterRequestProto::SharedDtor() {
  if (diagnostics_ != &::google::protobuf::internal::kEmptyString) {
    delete diagnostics_;
  }
  if (tracking_url_ != &::google::protobuf::internal::kEmptyString) {
    delete tracking_url_;
  }
  if (this != default_instance_) {
  }
}

void FinishApplicationMasterRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishApplicationMasterRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FinishApplicationMasterRequestProto_descriptor_;
}

const FinishApplicationMasterRequestProto& FinishApplicationMasterRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

FinishApplicationMasterRequestProto* FinishApplicationMasterRequestProto::default_instance_ = NULL;

FinishApplicationMasterRequestProto* FinishApplicationMasterRequestProto::New() const {
  return new FinishApplicationMasterRequestProto;
}

void FinishApplicationMasterRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_diagnostics()) {
      if (diagnostics_ != &::google::protobuf::internal::kEmptyString) {
        diagnostics_->clear();
      }
    }
    if (has_tracking_url()) {
      if (tracking_url_ != &::google::protobuf::internal::kEmptyString) {
        tracking_url_->clear();
      }
    }
    final_application_status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FinishApplicationMasterRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string diagnostics = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_diagnostics()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->diagnostics().data(), this->diagnostics().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_tracking_url;
        break;
      }

      // optional string tracking_url = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tracking_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tracking_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tracking_url().data(), this->tracking_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_final_application_status;
        break;
      }

      // optional .hadoop.yarn.FinalApplicationStatusProto final_application_status = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_final_application_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hadoop::yarn::FinalApplicationStatusProto_IsValid(value)) {
            set_final_application_status(static_cast< ::hadoop::yarn::FinalApplicationStatusProto >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FinishApplicationMasterRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string diagnostics = 1;
  if (has_diagnostics()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->diagnostics().data(), this->diagnostics().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->diagnostics(), output);
  }

  // optional string tracking_url = 2;
  if (has_tracking_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tracking_url().data(), this->tracking_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->tracking_url(), output);
  }

  // optional .hadoop.yarn.FinalApplicationStatusProto final_application_status = 3;
  if (has_final_application_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->final_application_status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FinishApplicationMasterRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string diagnostics = 1;
  if (has_diagnostics()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->diagnostics().data(), this->diagnostics().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->diagnostics(), target);
  }

  // optional string tracking_url = 2;
  if (has_tracking_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tracking_url().data(), this->tracking_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tracking_url(), target);
  }

  // optional .hadoop.yarn.FinalApplicationStatusProto final_application_status = 3;
  if (has_final_application_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->final_application_status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FinishApplicationMasterRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string diagnostics = 1;
    if (has_diagnostics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->diagnostics());
    }

    // optional string tracking_url = 2;
    if (has_tracking_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tracking_url());
    }

    // optional .hadoop.yarn.FinalApplicationStatusProto final_application_status = 3;
    if (has_final_application_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->final_application_status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishApplicationMasterRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FinishApplicationMasterRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FinishApplicationMasterRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FinishApplicationMasterRequestProto::MergeFrom(const FinishApplicationMasterRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_diagnostics()) {
      set_diagnostics(from.diagnostics());
    }
    if (from.has_tracking_url()) {
      set_tracking_url(from.tracking_url());
    }
    if (from.has_final_application_status()) {
      set_final_application_status(from.final_application_status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FinishApplicationMasterRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishApplicationMasterRequestProto::CopyFrom(const FinishApplicationMasterRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishApplicationMasterRequestProto::IsInitialized() const {

  return true;
}

void FinishApplicationMasterRequestProto::Swap(FinishApplicationMasterRequestProto* other) {
  if (other != this) {
    std::swap(diagnostics_, other->diagnostics_);
    std::swap(tracking_url_, other->tracking_url_);
    std::swap(final_application_status_, other->final_application_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FinishApplicationMasterRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FinishApplicationMasterRequestProto_descriptor_;
  metadata.reflection = FinishApplicationMasterRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FinishApplicationMasterResponseProto::kIsUnregisteredFieldNumber;
#endif  // !_MSC_VER

FinishApplicationMasterResponseProto::FinishApplicationMasterResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FinishApplicationMasterResponseProto::InitAsDefaultInstance() {
}

FinishApplicationMasterResponseProto::FinishApplicationMasterResponseProto(const FinishApplicationMasterResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FinishApplicationMasterResponseProto::SharedCtor() {
  _cached_size_ = 0;
  isunregistered_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FinishApplicationMasterResponseProto::~FinishApplicationMasterResponseProto() {
  SharedDtor();
}

void FinishApplicationMasterResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FinishApplicationMasterResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishApplicationMasterResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FinishApplicationMasterResponseProto_descriptor_;
}

const FinishApplicationMasterResponseProto& FinishApplicationMasterResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

FinishApplicationMasterResponseProto* FinishApplicationMasterResponseProto::default_instance_ = NULL;

FinishApplicationMasterResponseProto* FinishApplicationMasterResponseProto::New() const {
  return new FinishApplicationMasterResponseProto;
}

void FinishApplicationMasterResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    isunregistered_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FinishApplicationMasterResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool isUnregistered = 1 [default = false];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isunregistered_)));
          set_has_isunregistered();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FinishApplicationMasterResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool isUnregistered = 1 [default = false];
  if (has_isunregistered()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isunregistered(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FinishApplicationMasterResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool isUnregistered = 1 [default = false];
  if (has_isunregistered()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isunregistered(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FinishApplicationMasterResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool isUnregistered = 1 [default = false];
    if (has_isunregistered()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishApplicationMasterResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FinishApplicationMasterResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FinishApplicationMasterResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FinishApplicationMasterResponseProto::MergeFrom(const FinishApplicationMasterResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_isunregistered()) {
      set_isunregistered(from.isunregistered());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FinishApplicationMasterResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishApplicationMasterResponseProto::CopyFrom(const FinishApplicationMasterResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishApplicationMasterResponseProto::IsInitialized() const {

  return true;
}

void FinishApplicationMasterResponseProto::Swap(FinishApplicationMasterResponseProto* other) {
  if (other != this) {
    std::swap(isunregistered_, other->isunregistered_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FinishApplicationMasterResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FinishApplicationMasterResponseProto_descriptor_;
  metadata.reflection = FinishApplicationMasterResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AllocateRequestProto::kAskFieldNumber;
const int AllocateRequestProto::kReleaseFieldNumber;
const int AllocateRequestProto::kBlacklistRequestFieldNumber;
const int AllocateRequestProto::kResponseIdFieldNumber;
const int AllocateRequestProto::kProgressFieldNumber;
#endif  // !_MSC_VER

AllocateRequestProto::AllocateRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AllocateRequestProto::InitAsDefaultInstance() {
  blacklist_request_ = const_cast< ::hadoop::yarn::ResourceBlacklistRequestProto*>(&::hadoop::yarn::ResourceBlacklistRequestProto::default_instance());
}

AllocateRequestProto::AllocateRequestProto(const AllocateRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AllocateRequestProto::SharedCtor() {
  _cached_size_ = 0;
  blacklist_request_ = NULL;
  response_id_ = 0;
  progress_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AllocateRequestProto::~AllocateRequestProto() {
  SharedDtor();
}

void AllocateRequestProto::SharedDtor() {
  if (this != default_instance_) {
    delete blacklist_request_;
  }
}

void AllocateRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocateRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllocateRequestProto_descriptor_;
}

const AllocateRequestProto& AllocateRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

AllocateRequestProto* AllocateRequestProto::default_instance_ = NULL;

AllocateRequestProto* AllocateRequestProto::New() const {
  return new AllocateRequestProto;
}

void AllocateRequestProto::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (has_blacklist_request()) {
      if (blacklist_request_ != NULL) blacklist_request_->::hadoop::yarn::ResourceBlacklistRequestProto::Clear();
    }
    response_id_ = 0;
    progress_ = 0;
  }
  ask_.Clear();
  release_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AllocateRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hadoop.yarn.ResourceRequestProto ask = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ask:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ask()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_ask;
        if (input->ExpectTag(18)) goto parse_release;
        break;
      }

      // repeated .hadoop.yarn.ContainerIdProto release = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_release:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_release()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_release;
        if (input->ExpectTag(26)) goto parse_blacklist_request;
        break;
      }

      // optional .hadoop.yarn.ResourceBlacklistRequestProto blacklist_request = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_blacklist_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blacklist_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_response_id;
        break;
      }

      // optional int32 response_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_response_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_id_)));
          set_has_response_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_progress;
        break;
      }

      // optional float progress = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_progress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
          set_has_progress();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AllocateRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .hadoop.yarn.ResourceRequestProto ask = 1;
  for (int i = 0; i < this->ask_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ask(i), output);
  }

  // repeated .hadoop.yarn.ContainerIdProto release = 2;
  for (int i = 0; i < this->release_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->release(i), output);
  }

  // optional .hadoop.yarn.ResourceBlacklistRequestProto blacklist_request = 3;
  if (has_blacklist_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->blacklist_request(), output);
  }

  // optional int32 response_id = 4;
  if (has_response_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->response_id(), output);
  }

  // optional float progress = 5;
  if (has_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->progress(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AllocateRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .hadoop.yarn.ResourceRequestProto ask = 1;
  for (int i = 0; i < this->ask_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ask(i), target);
  }

  // repeated .hadoop.yarn.ContainerIdProto release = 2;
  for (int i = 0; i < this->release_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->release(i), target);
  }

  // optional .hadoop.yarn.ResourceBlacklistRequestProto blacklist_request = 3;
  if (has_blacklist_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->blacklist_request(), target);
  }

  // optional int32 response_id = 4;
  if (has_response_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->response_id(), target);
  }

  // optional float progress = 5;
  if (has_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->progress(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AllocateRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional .hadoop.yarn.ResourceBlacklistRequestProto blacklist_request = 3;
    if (has_blacklist_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blacklist_request());
    }

    // optional int32 response_id = 4;
    if (has_response_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->response_id());
    }

    // optional float progress = 5;
    if (has_progress()) {
      total_size += 1 + 4;
    }

  }
  // repeated .hadoop.yarn.ResourceRequestProto ask = 1;
  total_size += 1 * this->ask_size();
  for (int i = 0; i < this->ask_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ask(i));
  }

  // repeated .hadoop.yarn.ContainerIdProto release = 2;
  total_size += 1 * this->release_size();
  for (int i = 0; i < this->release_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->release(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocateRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AllocateRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AllocateRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AllocateRequestProto::MergeFrom(const AllocateRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  ask_.MergeFrom(from.ask_);
  release_.MergeFrom(from.release_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_blacklist_request()) {
      mutable_blacklist_request()->::hadoop::yarn::ResourceBlacklistRequestProto::MergeFrom(from.blacklist_request());
    }
    if (from.has_response_id()) {
      set_response_id(from.response_id());
    }
    if (from.has_progress()) {
      set_progress(from.progress());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AllocateRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocateRequestProto::CopyFrom(const AllocateRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocateRequestProto::IsInitialized() const {

  return true;
}

void AllocateRequestProto::Swap(AllocateRequestProto* other) {
  if (other != this) {
    ask_.Swap(&other->ask_);
    release_.Swap(&other->release_);
    std::swap(blacklist_request_, other->blacklist_request_);
    std::swap(response_id_, other->response_id_);
    std::swap(progress_, other->progress_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AllocateRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllocateRequestProto_descriptor_;
  metadata.reflection = AllocateRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NMTokenProto::kNodeIdFieldNumber;
const int NMTokenProto::kTokenFieldNumber;
#endif  // !_MSC_VER

NMTokenProto::NMTokenProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NMTokenProto::InitAsDefaultInstance() {
  nodeid_ = const_cast< ::hadoop::yarn::NodeIdProto*>(&::hadoop::yarn::NodeIdProto::default_instance());
  token_ = const_cast< ::hadoop::common::TokenProto*>(&::hadoop::common::TokenProto::default_instance());
}

NMTokenProto::NMTokenProto(const NMTokenProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NMTokenProto::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = NULL;
  token_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NMTokenProto::~NMTokenProto() {
  SharedDtor();
}

void NMTokenProto::SharedDtor() {
  if (this != default_instance_) {
    delete nodeid_;
    delete token_;
  }
}

void NMTokenProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NMTokenProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NMTokenProto_descriptor_;
}

const NMTokenProto& NMTokenProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

NMTokenProto* NMTokenProto::default_instance_ = NULL;

NMTokenProto* NMTokenProto::New() const {
  return new NMTokenProto;
}

void NMTokenProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_nodeid()) {
      if (nodeid_ != NULL) nodeid_->::hadoop::yarn::NodeIdProto::Clear();
    }
    if (has_token()) {
      if (token_ != NULL) token_->::hadoop::common::TokenProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NMTokenProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.NodeIdProto nodeId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nodeid()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_token;
        break;
      }

      // optional .hadoop.common.TokenProto token = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_token()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NMTokenProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.NodeIdProto nodeId = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodeid(), output);
  }

  // optional .hadoop.common.TokenProto token = 2;
  if (has_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->token(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NMTokenProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.NodeIdProto nodeId = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->nodeid(), target);
  }

  // optional .hadoop.common.TokenProto token = 2;
  if (has_token()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->token(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NMTokenProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.NodeIdProto nodeId = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodeid());
    }

    // optional .hadoop.common.TokenProto token = 2;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->token());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NMTokenProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NMTokenProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NMTokenProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NMTokenProto::MergeFrom(const NMTokenProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      mutable_nodeid()->::hadoop::yarn::NodeIdProto::MergeFrom(from.nodeid());
    }
    if (from.has_token()) {
      mutable_token()->::hadoop::common::TokenProto::MergeFrom(from.token());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NMTokenProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NMTokenProto::CopyFrom(const NMTokenProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NMTokenProto::IsInitialized() const {

  if (has_token()) {
    if (!this->token().IsInitialized()) return false;
  }
  return true;
}

void NMTokenProto::Swap(NMTokenProto* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(token_, other->token_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NMTokenProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NMTokenProto_descriptor_;
  metadata.reflection = NMTokenProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AllocateResponseProto::kAMCommandFieldNumber;
const int AllocateResponseProto::kResponseIdFieldNumber;
const int AllocateResponseProto::kAllocatedContainersFieldNumber;
const int AllocateResponseProto::kCompletedContainerStatusesFieldNumber;
const int AllocateResponseProto::kLimitFieldNumber;
const int AllocateResponseProto::kUpdatedNodesFieldNumber;
const int AllocateResponseProto::kNumClusterNodesFieldNumber;
const int AllocateResponseProto::kPreemptFieldNumber;
const int AllocateResponseProto::kNmTokensFieldNumber;
#endif  // !_MSC_VER

AllocateResponseProto::AllocateResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AllocateResponseProto::InitAsDefaultInstance() {
  limit_ = const_cast< ::hadoop::yarn::ResourceProto*>(&::hadoop::yarn::ResourceProto::default_instance());
  preempt_ = const_cast< ::hadoop::yarn::PreemptionMessageProto*>(&::hadoop::yarn::PreemptionMessageProto::default_instance());
}

AllocateResponseProto::AllocateResponseProto(const AllocateResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AllocateResponseProto::SharedCtor() {
  _cached_size_ = 0;
  a_m_command_ = 1;
  response_id_ = 0;
  limit_ = NULL;
  num_cluster_nodes_ = 0;
  preempt_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AllocateResponseProto::~AllocateResponseProto() {
  SharedDtor();
}

void AllocateResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete limit_;
    delete preempt_;
  }
}

void AllocateResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocateResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllocateResponseProto_descriptor_;
}

const AllocateResponseProto& AllocateResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

AllocateResponseProto* AllocateResponseProto::default_instance_ = NULL;

AllocateResponseProto* AllocateResponseProto::New() const {
  return new AllocateResponseProto;
}

void AllocateResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    a_m_command_ = 1;
    response_id_ = 0;
    if (has_limit()) {
      if (limit_ != NULL) limit_->::hadoop::yarn::ResourceProto::Clear();
    }
    num_cluster_nodes_ = 0;
    if (has_preempt()) {
      if (preempt_ != NULL) preempt_->::hadoop::yarn::PreemptionMessageProto::Clear();
    }
  }
  allocated_containers_.Clear();
  completed_container_statuses_.Clear();
  updated_nodes_.Clear();
  nm_tokens_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AllocateResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.AMCommandProto a_m_command = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hadoop::yarn::AMCommandProto_IsValid(value)) {
            set_a_m_command(static_cast< ::hadoop::yarn::AMCommandProto >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_response_id;
        break;
      }

      // optional int32 response_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_response_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_id_)));
          set_has_response_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_allocated_containers;
        break;
      }

      // repeated .hadoop.yarn.ContainerProto allocated_containers = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_allocated_containers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_allocated_containers()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_allocated_containers;
        if (input->ExpectTag(34)) goto parse_completed_container_statuses;
        break;
      }

      // repeated .hadoop.yarn.ContainerStatusProto completed_container_statuses = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_completed_container_statuses:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_completed_container_statuses()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_completed_container_statuses;
        if (input->ExpectTag(42)) goto parse_limit;
        break;
      }

      // optional .hadoop.yarn.ResourceProto limit = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_limit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_limit()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_updated_nodes;
        break;
      }

      // repeated .hadoop.yarn.NodeReportProto updated_nodes = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_updated_nodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_updated_nodes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_updated_nodes;
        if (input->ExpectTag(56)) goto parse_num_cluster_nodes;
        break;
      }

      // optional int32 num_cluster_nodes = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num_cluster_nodes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_cluster_nodes_)));
          set_has_num_cluster_nodes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_preempt;
        break;
      }

      // optional .hadoop.yarn.PreemptionMessageProto preempt = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_preempt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preempt()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_nm_tokens;
        break;
      }

      // repeated .hadoop.yarn.NMTokenProto nm_tokens = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nm_tokens:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nm_tokens()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_nm_tokens;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AllocateResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.AMCommandProto a_m_command = 1;
  if (has_a_m_command()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->a_m_command(), output);
  }

  // optional int32 response_id = 2;
  if (has_response_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->response_id(), output);
  }

  // repeated .hadoop.yarn.ContainerProto allocated_containers = 3;
  for (int i = 0; i < this->allocated_containers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->allocated_containers(i), output);
  }

  // repeated .hadoop.yarn.ContainerStatusProto completed_container_statuses = 4;
  for (int i = 0; i < this->completed_container_statuses_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->completed_container_statuses(i), output);
  }

  // optional .hadoop.yarn.ResourceProto limit = 5;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->limit(), output);
  }

  // repeated .hadoop.yarn.NodeReportProto updated_nodes = 6;
  for (int i = 0; i < this->updated_nodes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->updated_nodes(i), output);
  }

  // optional int32 num_cluster_nodes = 7;
  if (has_num_cluster_nodes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->num_cluster_nodes(), output);
  }

  // optional .hadoop.yarn.PreemptionMessageProto preempt = 8;
  if (has_preempt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->preempt(), output);
  }

  // repeated .hadoop.yarn.NMTokenProto nm_tokens = 9;
  for (int i = 0; i < this->nm_tokens_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->nm_tokens(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AllocateResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.AMCommandProto a_m_command = 1;
  if (has_a_m_command()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->a_m_command(), target);
  }

  // optional int32 response_id = 2;
  if (has_response_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->response_id(), target);
  }

  // repeated .hadoop.yarn.ContainerProto allocated_containers = 3;
  for (int i = 0; i < this->allocated_containers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->allocated_containers(i), target);
  }

  // repeated .hadoop.yarn.ContainerStatusProto completed_container_statuses = 4;
  for (int i = 0; i < this->completed_container_statuses_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->completed_container_statuses(i), target);
  }

  // optional .hadoop.yarn.ResourceProto limit = 5;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->limit(), target);
  }

  // repeated .hadoop.yarn.NodeReportProto updated_nodes = 6;
  for (int i = 0; i < this->updated_nodes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->updated_nodes(i), target);
  }

  // optional int32 num_cluster_nodes = 7;
  if (has_num_cluster_nodes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->num_cluster_nodes(), target);
  }

  // optional .hadoop.yarn.PreemptionMessageProto preempt = 8;
  if (has_preempt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->preempt(), target);
  }

  // repeated .hadoop.yarn.NMTokenProto nm_tokens = 9;
  for (int i = 0; i < this->nm_tokens_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->nm_tokens(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AllocateResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.AMCommandProto a_m_command = 1;
    if (has_a_m_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->a_m_command());
    }

    // optional int32 response_id = 2;
    if (has_response_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->response_id());
    }

    // optional .hadoop.yarn.ResourceProto limit = 5;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->limit());
    }

    // optional int32 num_cluster_nodes = 7;
    if (has_num_cluster_nodes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_cluster_nodes());
    }

    // optional .hadoop.yarn.PreemptionMessageProto preempt = 8;
    if (has_preempt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->preempt());
    }

  }
  // repeated .hadoop.yarn.ContainerProto allocated_containers = 3;
  total_size += 1 * this->allocated_containers_size();
  for (int i = 0; i < this->allocated_containers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->allocated_containers(i));
  }

  // repeated .hadoop.yarn.ContainerStatusProto completed_container_statuses = 4;
  total_size += 1 * this->completed_container_statuses_size();
  for (int i = 0; i < this->completed_container_statuses_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->completed_container_statuses(i));
  }

  // repeated .hadoop.yarn.NodeReportProto updated_nodes = 6;
  total_size += 1 * this->updated_nodes_size();
  for (int i = 0; i < this->updated_nodes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->updated_nodes(i));
  }

  // repeated .hadoop.yarn.NMTokenProto nm_tokens = 9;
  total_size += 1 * this->nm_tokens_size();
  for (int i = 0; i < this->nm_tokens_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nm_tokens(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocateResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AllocateResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AllocateResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AllocateResponseProto::MergeFrom(const AllocateResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  allocated_containers_.MergeFrom(from.allocated_containers_);
  completed_container_statuses_.MergeFrom(from.completed_container_statuses_);
  updated_nodes_.MergeFrom(from.updated_nodes_);
  nm_tokens_.MergeFrom(from.nm_tokens_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a_m_command()) {
      set_a_m_command(from.a_m_command());
    }
    if (from.has_response_id()) {
      set_response_id(from.response_id());
    }
    if (from.has_limit()) {
      mutable_limit()->::hadoop::yarn::ResourceProto::MergeFrom(from.limit());
    }
    if (from.has_num_cluster_nodes()) {
      set_num_cluster_nodes(from.num_cluster_nodes());
    }
    if (from.has_preempt()) {
      mutable_preempt()->::hadoop::yarn::PreemptionMessageProto::MergeFrom(from.preempt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AllocateResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocateResponseProto::CopyFrom(const AllocateResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocateResponseProto::IsInitialized() const {

  for (int i = 0; i < allocated_containers_size(); i++) {
    if (!this->allocated_containers(i).IsInitialized()) return false;
  }
  for (int i = 0; i < nm_tokens_size(); i++) {
    if (!this->nm_tokens(i).IsInitialized()) return false;
  }
  return true;
}

void AllocateResponseProto::Swap(AllocateResponseProto* other) {
  if (other != this) {
    std::swap(a_m_command_, other->a_m_command_);
    std::swap(response_id_, other->response_id_);
    allocated_containers_.Swap(&other->allocated_containers_);
    completed_container_statuses_.Swap(&other->completed_container_statuses_);
    std::swap(limit_, other->limit_);
    updated_nodes_.Swap(&other->updated_nodes_);
    std::swap(num_cluster_nodes_, other->num_cluster_nodes_);
    std::swap(preempt_, other->preempt_);
    nm_tokens_.Swap(&other->nm_tokens_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AllocateResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllocateResponseProto_descriptor_;
  metadata.reflection = AllocateResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetNewApplicationRequestProto::GetNewApplicationRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetNewApplicationRequestProto::InitAsDefaultInstance() {
}

GetNewApplicationRequestProto::GetNewApplicationRequestProto(const GetNewApplicationRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetNewApplicationRequestProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNewApplicationRequestProto::~GetNewApplicationRequestProto() {
  SharedDtor();
}

void GetNewApplicationRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetNewApplicationRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNewApplicationRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNewApplicationRequestProto_descriptor_;
}

const GetNewApplicationRequestProto& GetNewApplicationRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetNewApplicationRequestProto* GetNewApplicationRequestProto::default_instance_ = NULL;

GetNewApplicationRequestProto* GetNewApplicationRequestProto::New() const {
  return new GetNewApplicationRequestProto;
}

void GetNewApplicationRequestProto::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetNewApplicationRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void GetNewApplicationRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetNewApplicationRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetNewApplicationRequestProto::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNewApplicationRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetNewApplicationRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetNewApplicationRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNewApplicationRequestProto::MergeFrom(const GetNewApplicationRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetNewApplicationRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNewApplicationRequestProto::CopyFrom(const GetNewApplicationRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNewApplicationRequestProto::IsInitialized() const {

  return true;
}

void GetNewApplicationRequestProto::Swap(GetNewApplicationRequestProto* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetNewApplicationRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNewApplicationRequestProto_descriptor_;
  metadata.reflection = GetNewApplicationRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetNewApplicationResponseProto::kApplicationIdFieldNumber;
const int GetNewApplicationResponseProto::kMaximumCapabilityFieldNumber;
#endif  // !_MSC_VER

GetNewApplicationResponseProto::GetNewApplicationResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetNewApplicationResponseProto::InitAsDefaultInstance() {
  application_id_ = const_cast< ::hadoop::yarn::ApplicationIdProto*>(&::hadoop::yarn::ApplicationIdProto::default_instance());
  maximumcapability_ = const_cast< ::hadoop::yarn::ResourceProto*>(&::hadoop::yarn::ResourceProto::default_instance());
}

GetNewApplicationResponseProto::GetNewApplicationResponseProto(const GetNewApplicationResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetNewApplicationResponseProto::SharedCtor() {
  _cached_size_ = 0;
  application_id_ = NULL;
  maximumcapability_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNewApplicationResponseProto::~GetNewApplicationResponseProto() {
  SharedDtor();
}

void GetNewApplicationResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete application_id_;
    delete maximumcapability_;
  }
}

void GetNewApplicationResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNewApplicationResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNewApplicationResponseProto_descriptor_;
}

const GetNewApplicationResponseProto& GetNewApplicationResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetNewApplicationResponseProto* GetNewApplicationResponseProto::default_instance_ = NULL;

GetNewApplicationResponseProto* GetNewApplicationResponseProto::New() const {
  return new GetNewApplicationResponseProto;
}

void GetNewApplicationResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_application_id()) {
      if (application_id_ != NULL) application_id_->::hadoop::yarn::ApplicationIdProto::Clear();
    }
    if (has_maximumcapability()) {
      if (maximumcapability_ != NULL) maximumcapability_->::hadoop::yarn::ResourceProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetNewApplicationResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.ApplicationIdProto application_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_application_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_maximumCapability;
        break;
      }

      // optional .hadoop.yarn.ResourceProto maximumCapability = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_maximumCapability:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_maximumcapability()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetNewApplicationResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.ApplicationIdProto application_id = 1;
  if (has_application_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->application_id(), output);
  }

  // optional .hadoop.yarn.ResourceProto maximumCapability = 2;
  if (has_maximumcapability()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->maximumcapability(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetNewApplicationResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.ApplicationIdProto application_id = 1;
  if (has_application_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->application_id(), target);
  }

  // optional .hadoop.yarn.ResourceProto maximumCapability = 2;
  if (has_maximumcapability()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->maximumcapability(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetNewApplicationResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.ApplicationIdProto application_id = 1;
    if (has_application_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->application_id());
    }

    // optional .hadoop.yarn.ResourceProto maximumCapability = 2;
    if (has_maximumcapability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->maximumcapability());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNewApplicationResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetNewApplicationResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetNewApplicationResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNewApplicationResponseProto::MergeFrom(const GetNewApplicationResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application_id()) {
      mutable_application_id()->::hadoop::yarn::ApplicationIdProto::MergeFrom(from.application_id());
    }
    if (from.has_maximumcapability()) {
      mutable_maximumcapability()->::hadoop::yarn::ResourceProto::MergeFrom(from.maximumcapability());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetNewApplicationResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNewApplicationResponseProto::CopyFrom(const GetNewApplicationResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNewApplicationResponseProto::IsInitialized() const {

  return true;
}

void GetNewApplicationResponseProto::Swap(GetNewApplicationResponseProto* other) {
  if (other != this) {
    std::swap(application_id_, other->application_id_);
    std::swap(maximumcapability_, other->maximumcapability_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetNewApplicationResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNewApplicationResponseProto_descriptor_;
  metadata.reflection = GetNewApplicationResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetApplicationReportRequestProto::kApplicationIdFieldNumber;
#endif  // !_MSC_VER

GetApplicationReportRequestProto::GetApplicationReportRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetApplicationReportRequestProto::InitAsDefaultInstance() {
  application_id_ = const_cast< ::hadoop::yarn::ApplicationIdProto*>(&::hadoop::yarn::ApplicationIdProto::default_instance());
}

GetApplicationReportRequestProto::GetApplicationReportRequestProto(const GetApplicationReportRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetApplicationReportRequestProto::SharedCtor() {
  _cached_size_ = 0;
  application_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetApplicationReportRequestProto::~GetApplicationReportRequestProto() {
  SharedDtor();
}

void GetApplicationReportRequestProto::SharedDtor() {
  if (this != default_instance_) {
    delete application_id_;
  }
}

void GetApplicationReportRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetApplicationReportRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetApplicationReportRequestProto_descriptor_;
}

const GetApplicationReportRequestProto& GetApplicationReportRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetApplicationReportRequestProto* GetApplicationReportRequestProto::default_instance_ = NULL;

GetApplicationReportRequestProto* GetApplicationReportRequestProto::New() const {
  return new GetApplicationReportRequestProto;
}

void GetApplicationReportRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_application_id()) {
      if (application_id_ != NULL) application_id_->::hadoop::yarn::ApplicationIdProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetApplicationReportRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.ApplicationIdProto application_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_application_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetApplicationReportRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.ApplicationIdProto application_id = 1;
  if (has_application_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->application_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetApplicationReportRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.ApplicationIdProto application_id = 1;
  if (has_application_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->application_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetApplicationReportRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.ApplicationIdProto application_id = 1;
    if (has_application_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->application_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetApplicationReportRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetApplicationReportRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetApplicationReportRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetApplicationReportRequestProto::MergeFrom(const GetApplicationReportRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application_id()) {
      mutable_application_id()->::hadoop::yarn::ApplicationIdProto::MergeFrom(from.application_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetApplicationReportRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationReportRequestProto::CopyFrom(const GetApplicationReportRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationReportRequestProto::IsInitialized() const {

  return true;
}

void GetApplicationReportRequestProto::Swap(GetApplicationReportRequestProto* other) {
  if (other != this) {
    std::swap(application_id_, other->application_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetApplicationReportRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetApplicationReportRequestProto_descriptor_;
  metadata.reflection = GetApplicationReportRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetApplicationReportResponseProto::kApplicationReportFieldNumber;
#endif  // !_MSC_VER

GetApplicationReportResponseProto::GetApplicationReportResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetApplicationReportResponseProto::InitAsDefaultInstance() {
  application_report_ = const_cast< ::hadoop::yarn::ApplicationReportProto*>(&::hadoop::yarn::ApplicationReportProto::default_instance());
}

GetApplicationReportResponseProto::GetApplicationReportResponseProto(const GetApplicationReportResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetApplicationReportResponseProto::SharedCtor() {
  _cached_size_ = 0;
  application_report_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetApplicationReportResponseProto::~GetApplicationReportResponseProto() {
  SharedDtor();
}

void GetApplicationReportResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete application_report_;
  }
}

void GetApplicationReportResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetApplicationReportResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetApplicationReportResponseProto_descriptor_;
}

const GetApplicationReportResponseProto& GetApplicationReportResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetApplicationReportResponseProto* GetApplicationReportResponseProto::default_instance_ = NULL;

GetApplicationReportResponseProto* GetApplicationReportResponseProto::New() const {
  return new GetApplicationReportResponseProto;
}

void GetApplicationReportResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_application_report()) {
      if (application_report_ != NULL) application_report_->::hadoop::yarn::ApplicationReportProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetApplicationReportResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.ApplicationReportProto application_report = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_application_report()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetApplicationReportResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.ApplicationReportProto application_report = 1;
  if (has_application_report()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->application_report(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetApplicationReportResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.ApplicationReportProto application_report = 1;
  if (has_application_report()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->application_report(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetApplicationReportResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.ApplicationReportProto application_report = 1;
    if (has_application_report()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->application_report());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetApplicationReportResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetApplicationReportResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetApplicationReportResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetApplicationReportResponseProto::MergeFrom(const GetApplicationReportResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application_report()) {
      mutable_application_report()->::hadoop::yarn::ApplicationReportProto::MergeFrom(from.application_report());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetApplicationReportResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationReportResponseProto::CopyFrom(const GetApplicationReportResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationReportResponseProto::IsInitialized() const {

  if (has_application_report()) {
    if (!this->application_report().IsInitialized()) return false;
  }
  return true;
}

void GetApplicationReportResponseProto::Swap(GetApplicationReportResponseProto* other) {
  if (other != this) {
    std::swap(application_report_, other->application_report_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetApplicationReportResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetApplicationReportResponseProto_descriptor_;
  metadata.reflection = GetApplicationReportResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SubmitApplicationRequestProto::kApplicationSubmissionContextFieldNumber;
#endif  // !_MSC_VER

SubmitApplicationRequestProto::SubmitApplicationRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SubmitApplicationRequestProto::InitAsDefaultInstance() {
  application_submission_context_ = const_cast< ::hadoop::yarn::ApplicationSubmissionContextProto*>(&::hadoop::yarn::ApplicationSubmissionContextProto::default_instance());
}

SubmitApplicationRequestProto::SubmitApplicationRequestProto(const SubmitApplicationRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SubmitApplicationRequestProto::SharedCtor() {
  _cached_size_ = 0;
  application_submission_context_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubmitApplicationRequestProto::~SubmitApplicationRequestProto() {
  SharedDtor();
}

void SubmitApplicationRequestProto::SharedDtor() {
  if (this != default_instance_) {
    delete application_submission_context_;
  }
}

void SubmitApplicationRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitApplicationRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubmitApplicationRequestProto_descriptor_;
}

const SubmitApplicationRequestProto& SubmitApplicationRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

SubmitApplicationRequestProto* SubmitApplicationRequestProto::default_instance_ = NULL;

SubmitApplicationRequestProto* SubmitApplicationRequestProto::New() const {
  return new SubmitApplicationRequestProto;
}

void SubmitApplicationRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_application_submission_context()) {
      if (application_submission_context_ != NULL) application_submission_context_->::hadoop::yarn::ApplicationSubmissionContextProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SubmitApplicationRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.ApplicationSubmissionContextProto application_submission_context = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_application_submission_context()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SubmitApplicationRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.ApplicationSubmissionContextProto application_submission_context = 1;
  if (has_application_submission_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->application_submission_context(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SubmitApplicationRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.ApplicationSubmissionContextProto application_submission_context = 1;
  if (has_application_submission_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->application_submission_context(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SubmitApplicationRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.ApplicationSubmissionContextProto application_submission_context = 1;
    if (has_application_submission_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->application_submission_context());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitApplicationRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SubmitApplicationRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SubmitApplicationRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SubmitApplicationRequestProto::MergeFrom(const SubmitApplicationRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application_submission_context()) {
      mutable_application_submission_context()->::hadoop::yarn::ApplicationSubmissionContextProto::MergeFrom(from.application_submission_context());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SubmitApplicationRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitApplicationRequestProto::CopyFrom(const SubmitApplicationRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitApplicationRequestProto::IsInitialized() const {

  return true;
}

void SubmitApplicationRequestProto::Swap(SubmitApplicationRequestProto* other) {
  if (other != this) {
    std::swap(application_submission_context_, other->application_submission_context_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SubmitApplicationRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubmitApplicationRequestProto_descriptor_;
  metadata.reflection = SubmitApplicationRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

SubmitApplicationResponseProto::SubmitApplicationResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SubmitApplicationResponseProto::InitAsDefaultInstance() {
}

SubmitApplicationResponseProto::SubmitApplicationResponseProto(const SubmitApplicationResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SubmitApplicationResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubmitApplicationResponseProto::~SubmitApplicationResponseProto() {
  SharedDtor();
}

void SubmitApplicationResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SubmitApplicationResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitApplicationResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubmitApplicationResponseProto_descriptor_;
}

const SubmitApplicationResponseProto& SubmitApplicationResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

SubmitApplicationResponseProto* SubmitApplicationResponseProto::default_instance_ = NULL;

SubmitApplicationResponseProto* SubmitApplicationResponseProto::New() const {
  return new SubmitApplicationResponseProto;
}

void SubmitApplicationResponseProto::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SubmitApplicationResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void SubmitApplicationResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SubmitApplicationResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SubmitApplicationResponseProto::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitApplicationResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SubmitApplicationResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SubmitApplicationResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SubmitApplicationResponseProto::MergeFrom(const SubmitApplicationResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SubmitApplicationResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitApplicationResponseProto::CopyFrom(const SubmitApplicationResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitApplicationResponseProto::IsInitialized() const {

  return true;
}

void SubmitApplicationResponseProto::Swap(SubmitApplicationResponseProto* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SubmitApplicationResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubmitApplicationResponseProto_descriptor_;
  metadata.reflection = SubmitApplicationResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int KillApplicationRequestProto::kApplicationIdFieldNumber;
#endif  // !_MSC_VER

KillApplicationRequestProto::KillApplicationRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void KillApplicationRequestProto::InitAsDefaultInstance() {
  application_id_ = const_cast< ::hadoop::yarn::ApplicationIdProto*>(&::hadoop::yarn::ApplicationIdProto::default_instance());
}

KillApplicationRequestProto::KillApplicationRequestProto(const KillApplicationRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void KillApplicationRequestProto::SharedCtor() {
  _cached_size_ = 0;
  application_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KillApplicationRequestProto::~KillApplicationRequestProto() {
  SharedDtor();
}

void KillApplicationRequestProto::SharedDtor() {
  if (this != default_instance_) {
    delete application_id_;
  }
}

void KillApplicationRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KillApplicationRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KillApplicationRequestProto_descriptor_;
}

const KillApplicationRequestProto& KillApplicationRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

KillApplicationRequestProto* KillApplicationRequestProto::default_instance_ = NULL;

KillApplicationRequestProto* KillApplicationRequestProto::New() const {
  return new KillApplicationRequestProto;
}

void KillApplicationRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_application_id()) {
      if (application_id_ != NULL) application_id_->::hadoop::yarn::ApplicationIdProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool KillApplicationRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.ApplicationIdProto application_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_application_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void KillApplicationRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.ApplicationIdProto application_id = 1;
  if (has_application_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->application_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* KillApplicationRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.ApplicationIdProto application_id = 1;
  if (has_application_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->application_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int KillApplicationRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.ApplicationIdProto application_id = 1;
    if (has_application_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->application_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KillApplicationRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const KillApplicationRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const KillApplicationRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void KillApplicationRequestProto::MergeFrom(const KillApplicationRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application_id()) {
      mutable_application_id()->::hadoop::yarn::ApplicationIdProto::MergeFrom(from.application_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void KillApplicationRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KillApplicationRequestProto::CopyFrom(const KillApplicationRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KillApplicationRequestProto::IsInitialized() const {

  return true;
}

void KillApplicationRequestProto::Swap(KillApplicationRequestProto* other) {
  if (other != this) {
    std::swap(application_id_, other->application_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata KillApplicationRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KillApplicationRequestProto_descriptor_;
  metadata.reflection = KillApplicationRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

KillApplicationResponseProto::KillApplicationResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void KillApplicationResponseProto::InitAsDefaultInstance() {
}

KillApplicationResponseProto::KillApplicationResponseProto(const KillApplicationResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void KillApplicationResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KillApplicationResponseProto::~KillApplicationResponseProto() {
  SharedDtor();
}

void KillApplicationResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void KillApplicationResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KillApplicationResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KillApplicationResponseProto_descriptor_;
}

const KillApplicationResponseProto& KillApplicationResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

KillApplicationResponseProto* KillApplicationResponseProto::default_instance_ = NULL;

KillApplicationResponseProto* KillApplicationResponseProto::New() const {
  return new KillApplicationResponseProto;
}

void KillApplicationResponseProto::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool KillApplicationResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void KillApplicationResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* KillApplicationResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int KillApplicationResponseProto::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KillApplicationResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const KillApplicationResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const KillApplicationResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void KillApplicationResponseProto::MergeFrom(const KillApplicationResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void KillApplicationResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KillApplicationResponseProto::CopyFrom(const KillApplicationResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KillApplicationResponseProto::IsInitialized() const {

  return true;
}

void KillApplicationResponseProto::Swap(KillApplicationResponseProto* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata KillApplicationResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KillApplicationResponseProto_descriptor_;
  metadata.reflection = KillApplicationResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetClusterMetricsRequestProto::GetClusterMetricsRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetClusterMetricsRequestProto::InitAsDefaultInstance() {
}

GetClusterMetricsRequestProto::GetClusterMetricsRequestProto(const GetClusterMetricsRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetClusterMetricsRequestProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetClusterMetricsRequestProto::~GetClusterMetricsRequestProto() {
  SharedDtor();
}

void GetClusterMetricsRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetClusterMetricsRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterMetricsRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClusterMetricsRequestProto_descriptor_;
}

const GetClusterMetricsRequestProto& GetClusterMetricsRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetClusterMetricsRequestProto* GetClusterMetricsRequestProto::default_instance_ = NULL;

GetClusterMetricsRequestProto* GetClusterMetricsRequestProto::New() const {
  return new GetClusterMetricsRequestProto;
}

void GetClusterMetricsRequestProto::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetClusterMetricsRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void GetClusterMetricsRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetClusterMetricsRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetClusterMetricsRequestProto::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterMetricsRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetClusterMetricsRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetClusterMetricsRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetClusterMetricsRequestProto::MergeFrom(const GetClusterMetricsRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetClusterMetricsRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterMetricsRequestProto::CopyFrom(const GetClusterMetricsRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterMetricsRequestProto::IsInitialized() const {

  return true;
}

void GetClusterMetricsRequestProto::Swap(GetClusterMetricsRequestProto* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetClusterMetricsRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClusterMetricsRequestProto_descriptor_;
  metadata.reflection = GetClusterMetricsRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetClusterMetricsResponseProto::kClusterMetricsFieldNumber;
#endif  // !_MSC_VER

GetClusterMetricsResponseProto::GetClusterMetricsResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetClusterMetricsResponseProto::InitAsDefaultInstance() {
  cluster_metrics_ = const_cast< ::hadoop::yarn::YarnClusterMetricsProto*>(&::hadoop::yarn::YarnClusterMetricsProto::default_instance());
}

GetClusterMetricsResponseProto::GetClusterMetricsResponseProto(const GetClusterMetricsResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetClusterMetricsResponseProto::SharedCtor() {
  _cached_size_ = 0;
  cluster_metrics_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetClusterMetricsResponseProto::~GetClusterMetricsResponseProto() {
  SharedDtor();
}

void GetClusterMetricsResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete cluster_metrics_;
  }
}

void GetClusterMetricsResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterMetricsResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClusterMetricsResponseProto_descriptor_;
}

const GetClusterMetricsResponseProto& GetClusterMetricsResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetClusterMetricsResponseProto* GetClusterMetricsResponseProto::default_instance_ = NULL;

GetClusterMetricsResponseProto* GetClusterMetricsResponseProto::New() const {
  return new GetClusterMetricsResponseProto;
}

void GetClusterMetricsResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_cluster_metrics()) {
      if (cluster_metrics_ != NULL) cluster_metrics_->::hadoop::yarn::YarnClusterMetricsProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetClusterMetricsResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.YarnClusterMetricsProto cluster_metrics = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cluster_metrics()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetClusterMetricsResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.YarnClusterMetricsProto cluster_metrics = 1;
  if (has_cluster_metrics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cluster_metrics(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetClusterMetricsResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.YarnClusterMetricsProto cluster_metrics = 1;
  if (has_cluster_metrics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cluster_metrics(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetClusterMetricsResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.YarnClusterMetricsProto cluster_metrics = 1;
    if (has_cluster_metrics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cluster_metrics());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterMetricsResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetClusterMetricsResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetClusterMetricsResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetClusterMetricsResponseProto::MergeFrom(const GetClusterMetricsResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cluster_metrics()) {
      mutable_cluster_metrics()->::hadoop::yarn::YarnClusterMetricsProto::MergeFrom(from.cluster_metrics());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetClusterMetricsResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterMetricsResponseProto::CopyFrom(const GetClusterMetricsResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterMetricsResponseProto::IsInitialized() const {

  return true;
}

void GetClusterMetricsResponseProto::Swap(GetClusterMetricsResponseProto* other) {
  if (other != this) {
    std::swap(cluster_metrics_, other->cluster_metrics_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetClusterMetricsResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClusterMetricsResponseProto_descriptor_;
  metadata.reflection = GetClusterMetricsResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetApplicationsRequestProto::kApplicationTypesFieldNumber;
const int GetApplicationsRequestProto::kApplicationStatesFieldNumber;
#endif  // !_MSC_VER

GetApplicationsRequestProto::GetApplicationsRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetApplicationsRequestProto::InitAsDefaultInstance() {
}

GetApplicationsRequestProto::GetApplicationsRequestProto(const GetApplicationsRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetApplicationsRequestProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetApplicationsRequestProto::~GetApplicationsRequestProto() {
  SharedDtor();
}

void GetApplicationsRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetApplicationsRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetApplicationsRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetApplicationsRequestProto_descriptor_;
}

const GetApplicationsRequestProto& GetApplicationsRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetApplicationsRequestProto* GetApplicationsRequestProto::default_instance_ = NULL;

GetApplicationsRequestProto* GetApplicationsRequestProto::New() const {
  return new GetApplicationsRequestProto;
}

void GetApplicationsRequestProto::Clear() {
  application_types_.Clear();
  application_states_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetApplicationsRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string application_types = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_application_types:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_application_types()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->application_types(this->application_types_size() - 1).data(),
            this->application_types(this->application_types_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_application_types;
        if (input->ExpectTag(16)) goto parse_application_states;
        break;
      }

      // repeated .hadoop.yarn.YarnApplicationStateProto application_states = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_application_states:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hadoop::yarn::YarnApplicationStateProto_IsValid(value)) {
            add_application_states(static_cast< ::hadoop::yarn::YarnApplicationStateProto >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::hadoop::yarn::YarnApplicationStateProto_IsValid,
                 this->mutable_application_states())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_application_states;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetApplicationsRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string application_types = 1;
  for (int i = 0; i < this->application_types_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->application_types(i).data(), this->application_types(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->application_types(i), output);
  }

  // repeated .hadoop.yarn.YarnApplicationStateProto application_states = 2;
  for (int i = 0; i < this->application_states_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->application_states(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetApplicationsRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string application_types = 1;
  for (int i = 0; i < this->application_types_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->application_types(i).data(), this->application_types(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->application_types(i), target);
  }

  // repeated .hadoop.yarn.YarnApplicationStateProto application_states = 2;
  for (int i = 0; i < this->application_states_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->application_states(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetApplicationsRequestProto::ByteSize() const {
  int total_size = 0;

  // repeated string application_types = 1;
  total_size += 1 * this->application_types_size();
  for (int i = 0; i < this->application_types_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->application_types(i));
  }

  // repeated .hadoop.yarn.YarnApplicationStateProto application_states = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->application_states_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->application_states(i));
    }
    total_size += 1 * this->application_states_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetApplicationsRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetApplicationsRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetApplicationsRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetApplicationsRequestProto::MergeFrom(const GetApplicationsRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  application_types_.MergeFrom(from.application_types_);
  application_states_.MergeFrom(from.application_states_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetApplicationsRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationsRequestProto::CopyFrom(const GetApplicationsRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationsRequestProto::IsInitialized() const {

  return true;
}

void GetApplicationsRequestProto::Swap(GetApplicationsRequestProto* other) {
  if (other != this) {
    application_types_.Swap(&other->application_types_);
    application_states_.Swap(&other->application_states_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetApplicationsRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetApplicationsRequestProto_descriptor_;
  metadata.reflection = GetApplicationsRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetApplicationsResponseProto::kApplicationsFieldNumber;
#endif  // !_MSC_VER

GetApplicationsResponseProto::GetApplicationsResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetApplicationsResponseProto::InitAsDefaultInstance() {
}

GetApplicationsResponseProto::GetApplicationsResponseProto(const GetApplicationsResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetApplicationsResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetApplicationsResponseProto::~GetApplicationsResponseProto() {
  SharedDtor();
}

void GetApplicationsResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetApplicationsResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetApplicationsResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetApplicationsResponseProto_descriptor_;
}

const GetApplicationsResponseProto& GetApplicationsResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetApplicationsResponseProto* GetApplicationsResponseProto::default_instance_ = NULL;

GetApplicationsResponseProto* GetApplicationsResponseProto::New() const {
  return new GetApplicationsResponseProto;
}

void GetApplicationsResponseProto::Clear() {
  applications_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetApplicationsResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hadoop.yarn.ApplicationReportProto applications = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_applications:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_applications()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_applications;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetApplicationsResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .hadoop.yarn.ApplicationReportProto applications = 1;
  for (int i = 0; i < this->applications_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->applications(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetApplicationsResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .hadoop.yarn.ApplicationReportProto applications = 1;
  for (int i = 0; i < this->applications_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->applications(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetApplicationsResponseProto::ByteSize() const {
  int total_size = 0;

  // repeated .hadoop.yarn.ApplicationReportProto applications = 1;
  total_size += 1 * this->applications_size();
  for (int i = 0; i < this->applications_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->applications(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetApplicationsResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetApplicationsResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetApplicationsResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetApplicationsResponseProto::MergeFrom(const GetApplicationsResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  applications_.MergeFrom(from.applications_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetApplicationsResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetApplicationsResponseProto::CopyFrom(const GetApplicationsResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetApplicationsResponseProto::IsInitialized() const {

  for (int i = 0; i < applications_size(); i++) {
    if (!this->applications(i).IsInitialized()) return false;
  }
  return true;
}

void GetApplicationsResponseProto::Swap(GetApplicationsResponseProto* other) {
  if (other != this) {
    applications_.Swap(&other->applications_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetApplicationsResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetApplicationsResponseProto_descriptor_;
  metadata.reflection = GetApplicationsResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetClusterNodesRequestProto::kNodeStatesFieldNumber;
#endif  // !_MSC_VER

GetClusterNodesRequestProto::GetClusterNodesRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetClusterNodesRequestProto::InitAsDefaultInstance() {
}

GetClusterNodesRequestProto::GetClusterNodesRequestProto(const GetClusterNodesRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetClusterNodesRequestProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetClusterNodesRequestProto::~GetClusterNodesRequestProto() {
  SharedDtor();
}

void GetClusterNodesRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetClusterNodesRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterNodesRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClusterNodesRequestProto_descriptor_;
}

const GetClusterNodesRequestProto& GetClusterNodesRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetClusterNodesRequestProto* GetClusterNodesRequestProto::default_instance_ = NULL;

GetClusterNodesRequestProto* GetClusterNodesRequestProto::New() const {
  return new GetClusterNodesRequestProto;
}

void GetClusterNodesRequestProto::Clear() {
  nodestates_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetClusterNodesRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hadoop.yarn.NodeStateProto nodeStates = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeStates:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hadoop::yarn::NodeStateProto_IsValid(value)) {
            add_nodestates(static_cast< ::hadoop::yarn::NodeStateProto >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::hadoop::yarn::NodeStateProto_IsValid,
                 this->mutable_nodestates())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_nodeStates;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetClusterNodesRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .hadoop.yarn.NodeStateProto nodeStates = 1;
  for (int i = 0; i < this->nodestates_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->nodestates(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetClusterNodesRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .hadoop.yarn.NodeStateProto nodeStates = 1;
  for (int i = 0; i < this->nodestates_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->nodestates(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetClusterNodesRequestProto::ByteSize() const {
  int total_size = 0;

  // repeated .hadoop.yarn.NodeStateProto nodeStates = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->nodestates_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->nodestates(i));
    }
    total_size += 1 * this->nodestates_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterNodesRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetClusterNodesRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetClusterNodesRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetClusterNodesRequestProto::MergeFrom(const GetClusterNodesRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  nodestates_.MergeFrom(from.nodestates_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetClusterNodesRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterNodesRequestProto::CopyFrom(const GetClusterNodesRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterNodesRequestProto::IsInitialized() const {

  return true;
}

void GetClusterNodesRequestProto::Swap(GetClusterNodesRequestProto* other) {
  if (other != this) {
    nodestates_.Swap(&other->nodestates_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetClusterNodesRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClusterNodesRequestProto_descriptor_;
  metadata.reflection = GetClusterNodesRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetClusterNodesResponseProto::kNodeReportsFieldNumber;
#endif  // !_MSC_VER

GetClusterNodesResponseProto::GetClusterNodesResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetClusterNodesResponseProto::InitAsDefaultInstance() {
}

GetClusterNodesResponseProto::GetClusterNodesResponseProto(const GetClusterNodesResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetClusterNodesResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetClusterNodesResponseProto::~GetClusterNodesResponseProto() {
  SharedDtor();
}

void GetClusterNodesResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetClusterNodesResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterNodesResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClusterNodesResponseProto_descriptor_;
}

const GetClusterNodesResponseProto& GetClusterNodesResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetClusterNodesResponseProto* GetClusterNodesResponseProto::default_instance_ = NULL;

GetClusterNodesResponseProto* GetClusterNodesResponseProto::New() const {
  return new GetClusterNodesResponseProto;
}

void GetClusterNodesResponseProto::Clear() {
  nodereports_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetClusterNodesResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hadoop.yarn.NodeReportProto nodeReports = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nodeReports:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodereports()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_nodeReports;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetClusterNodesResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .hadoop.yarn.NodeReportProto nodeReports = 1;
  for (int i = 0; i < this->nodereports_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodereports(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetClusterNodesResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .hadoop.yarn.NodeReportProto nodeReports = 1;
  for (int i = 0; i < this->nodereports_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->nodereports(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetClusterNodesResponseProto::ByteSize() const {
  int total_size = 0;

  // repeated .hadoop.yarn.NodeReportProto nodeReports = 1;
  total_size += 1 * this->nodereports_size();
  for (int i = 0; i < this->nodereports_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nodereports(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterNodesResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetClusterNodesResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetClusterNodesResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetClusterNodesResponseProto::MergeFrom(const GetClusterNodesResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  nodereports_.MergeFrom(from.nodereports_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetClusterNodesResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterNodesResponseProto::CopyFrom(const GetClusterNodesResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterNodesResponseProto::IsInitialized() const {

  return true;
}

void GetClusterNodesResponseProto::Swap(GetClusterNodesResponseProto* other) {
  if (other != this) {
    nodereports_.Swap(&other->nodereports_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetClusterNodesResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClusterNodesResponseProto_descriptor_;
  metadata.reflection = GetClusterNodesResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetQueueInfoRequestProto::kQueueNameFieldNumber;
const int GetQueueInfoRequestProto::kIncludeApplicationsFieldNumber;
const int GetQueueInfoRequestProto::kIncludeChildQueuesFieldNumber;
const int GetQueueInfoRequestProto::kRecursiveFieldNumber;
#endif  // !_MSC_VER

GetQueueInfoRequestProto::GetQueueInfoRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetQueueInfoRequestProto::InitAsDefaultInstance() {
}

GetQueueInfoRequestProto::GetQueueInfoRequestProto(const GetQueueInfoRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetQueueInfoRequestProto::SharedCtor() {
  _cached_size_ = 0;
  queuename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  includeapplications_ = false;
  includechildqueues_ = false;
  recursive_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetQueueInfoRequestProto::~GetQueueInfoRequestProto() {
  SharedDtor();
}

void GetQueueInfoRequestProto::SharedDtor() {
  if (queuename_ != &::google::protobuf::internal::kEmptyString) {
    delete queuename_;
  }
  if (this != default_instance_) {
  }
}

void GetQueueInfoRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetQueueInfoRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetQueueInfoRequestProto_descriptor_;
}

const GetQueueInfoRequestProto& GetQueueInfoRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetQueueInfoRequestProto* GetQueueInfoRequestProto::default_instance_ = NULL;

GetQueueInfoRequestProto* GetQueueInfoRequestProto::New() const {
  return new GetQueueInfoRequestProto;
}

void GetQueueInfoRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_queuename()) {
      if (queuename_ != &::google::protobuf::internal::kEmptyString) {
        queuename_->clear();
      }
    }
    includeapplications_ = false;
    includechildqueues_ = false;
    recursive_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetQueueInfoRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string queueName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_queuename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->queuename().data(), this->queuename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_includeApplications;
        break;
      }

      // optional bool includeApplications = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_includeApplications:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &includeapplications_)));
          set_has_includeapplications();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_includeChildQueues;
        break;
      }

      // optional bool includeChildQueues = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_includeChildQueues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &includechildqueues_)));
          set_has_includechildqueues();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_recursive;
        break;
      }

      // optional bool recursive = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recursive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recursive_)));
          set_has_recursive();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetQueueInfoRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string queueName = 1;
  if (has_queuename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->queuename().data(), this->queuename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->queuename(), output);
  }

  // optional bool includeApplications = 2;
  if (has_includeapplications()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->includeapplications(), output);
  }

  // optional bool includeChildQueues = 3;
  if (has_includechildqueues()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->includechildqueues(), output);
  }

  // optional bool recursive = 4;
  if (has_recursive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->recursive(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetQueueInfoRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string queueName = 1;
  if (has_queuename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->queuename().data(), this->queuename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->queuename(), target);
  }

  // optional bool includeApplications = 2;
  if (has_includeapplications()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->includeapplications(), target);
  }

  // optional bool includeChildQueues = 3;
  if (has_includechildqueues()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->includechildqueues(), target);
  }

  // optional bool recursive = 4;
  if (has_recursive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->recursive(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetQueueInfoRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string queueName = 1;
    if (has_queuename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->queuename());
    }

    // optional bool includeApplications = 2;
    if (has_includeapplications()) {
      total_size += 1 + 1;
    }

    // optional bool includeChildQueues = 3;
    if (has_includechildqueues()) {
      total_size += 1 + 1;
    }

    // optional bool recursive = 4;
    if (has_recursive()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetQueueInfoRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetQueueInfoRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetQueueInfoRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetQueueInfoRequestProto::MergeFrom(const GetQueueInfoRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_queuename()) {
      set_queuename(from.queuename());
    }
    if (from.has_includeapplications()) {
      set_includeapplications(from.includeapplications());
    }
    if (from.has_includechildqueues()) {
      set_includechildqueues(from.includechildqueues());
    }
    if (from.has_recursive()) {
      set_recursive(from.recursive());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetQueueInfoRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQueueInfoRequestProto::CopyFrom(const GetQueueInfoRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQueueInfoRequestProto::IsInitialized() const {

  return true;
}

void GetQueueInfoRequestProto::Swap(GetQueueInfoRequestProto* other) {
  if (other != this) {
    std::swap(queuename_, other->queuename_);
    std::swap(includeapplications_, other->includeapplications_);
    std::swap(includechildqueues_, other->includechildqueues_);
    std::swap(recursive_, other->recursive_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetQueueInfoRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetQueueInfoRequestProto_descriptor_;
  metadata.reflection = GetQueueInfoRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetQueueInfoResponseProto::kQueueInfoFieldNumber;
#endif  // !_MSC_VER

GetQueueInfoResponseProto::GetQueueInfoResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetQueueInfoResponseProto::InitAsDefaultInstance() {
  queueinfo_ = const_cast< ::hadoop::yarn::QueueInfoProto*>(&::hadoop::yarn::QueueInfoProto::default_instance());
}

GetQueueInfoResponseProto::GetQueueInfoResponseProto(const GetQueueInfoResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetQueueInfoResponseProto::SharedCtor() {
  _cached_size_ = 0;
  queueinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetQueueInfoResponseProto::~GetQueueInfoResponseProto() {
  SharedDtor();
}

void GetQueueInfoResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete queueinfo_;
  }
}

void GetQueueInfoResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetQueueInfoResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetQueueInfoResponseProto_descriptor_;
}

const GetQueueInfoResponseProto& GetQueueInfoResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetQueueInfoResponseProto* GetQueueInfoResponseProto::default_instance_ = NULL;

GetQueueInfoResponseProto* GetQueueInfoResponseProto::New() const {
  return new GetQueueInfoResponseProto;
}

void GetQueueInfoResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_queueinfo()) {
      if (queueinfo_ != NULL) queueinfo_->::hadoop::yarn::QueueInfoProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetQueueInfoResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.QueueInfoProto queueInfo = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_queueinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetQueueInfoResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.QueueInfoProto queueInfo = 1;
  if (has_queueinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->queueinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetQueueInfoResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.QueueInfoProto queueInfo = 1;
  if (has_queueinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->queueinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetQueueInfoResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.QueueInfoProto queueInfo = 1;
    if (has_queueinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->queueinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetQueueInfoResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetQueueInfoResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetQueueInfoResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetQueueInfoResponseProto::MergeFrom(const GetQueueInfoResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_queueinfo()) {
      mutable_queueinfo()->::hadoop::yarn::QueueInfoProto::MergeFrom(from.queueinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetQueueInfoResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQueueInfoResponseProto::CopyFrom(const GetQueueInfoResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQueueInfoResponseProto::IsInitialized() const {

  if (has_queueinfo()) {
    if (!this->queueinfo().IsInitialized()) return false;
  }
  return true;
}

void GetQueueInfoResponseProto::Swap(GetQueueInfoResponseProto* other) {
  if (other != this) {
    std::swap(queueinfo_, other->queueinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetQueueInfoResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetQueueInfoResponseProto_descriptor_;
  metadata.reflection = GetQueueInfoResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetQueueUserAclsInfoRequestProto::GetQueueUserAclsInfoRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetQueueUserAclsInfoRequestProto::InitAsDefaultInstance() {
}

GetQueueUserAclsInfoRequestProto::GetQueueUserAclsInfoRequestProto(const GetQueueUserAclsInfoRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetQueueUserAclsInfoRequestProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetQueueUserAclsInfoRequestProto::~GetQueueUserAclsInfoRequestProto() {
  SharedDtor();
}

void GetQueueUserAclsInfoRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetQueueUserAclsInfoRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetQueueUserAclsInfoRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetQueueUserAclsInfoRequestProto_descriptor_;
}

const GetQueueUserAclsInfoRequestProto& GetQueueUserAclsInfoRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetQueueUserAclsInfoRequestProto* GetQueueUserAclsInfoRequestProto::default_instance_ = NULL;

GetQueueUserAclsInfoRequestProto* GetQueueUserAclsInfoRequestProto::New() const {
  return new GetQueueUserAclsInfoRequestProto;
}

void GetQueueUserAclsInfoRequestProto::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetQueueUserAclsInfoRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void GetQueueUserAclsInfoRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetQueueUserAclsInfoRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetQueueUserAclsInfoRequestProto::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetQueueUserAclsInfoRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetQueueUserAclsInfoRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetQueueUserAclsInfoRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetQueueUserAclsInfoRequestProto::MergeFrom(const GetQueueUserAclsInfoRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetQueueUserAclsInfoRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQueueUserAclsInfoRequestProto::CopyFrom(const GetQueueUserAclsInfoRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQueueUserAclsInfoRequestProto::IsInitialized() const {

  return true;
}

void GetQueueUserAclsInfoRequestProto::Swap(GetQueueUserAclsInfoRequestProto* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetQueueUserAclsInfoRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetQueueUserAclsInfoRequestProto_descriptor_;
  metadata.reflection = GetQueueUserAclsInfoRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetQueueUserAclsInfoResponseProto::kQueueUserAclsFieldNumber;
#endif  // !_MSC_VER

GetQueueUserAclsInfoResponseProto::GetQueueUserAclsInfoResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetQueueUserAclsInfoResponseProto::InitAsDefaultInstance() {
}

GetQueueUserAclsInfoResponseProto::GetQueueUserAclsInfoResponseProto(const GetQueueUserAclsInfoResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetQueueUserAclsInfoResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetQueueUserAclsInfoResponseProto::~GetQueueUserAclsInfoResponseProto() {
  SharedDtor();
}

void GetQueueUserAclsInfoResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetQueueUserAclsInfoResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetQueueUserAclsInfoResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetQueueUserAclsInfoResponseProto_descriptor_;
}

const GetQueueUserAclsInfoResponseProto& GetQueueUserAclsInfoResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetQueueUserAclsInfoResponseProto* GetQueueUserAclsInfoResponseProto::default_instance_ = NULL;

GetQueueUserAclsInfoResponseProto* GetQueueUserAclsInfoResponseProto::New() const {
  return new GetQueueUserAclsInfoResponseProto;
}

void GetQueueUserAclsInfoResponseProto::Clear() {
  queueuseracls_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetQueueUserAclsInfoResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hadoop.yarn.QueueUserACLInfoProto queueUserAcls = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_queueUserAcls:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_queueuseracls()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_queueUserAcls;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetQueueUserAclsInfoResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .hadoop.yarn.QueueUserACLInfoProto queueUserAcls = 1;
  for (int i = 0; i < this->queueuseracls_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->queueuseracls(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetQueueUserAclsInfoResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .hadoop.yarn.QueueUserACLInfoProto queueUserAcls = 1;
  for (int i = 0; i < this->queueuseracls_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->queueuseracls(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetQueueUserAclsInfoResponseProto::ByteSize() const {
  int total_size = 0;

  // repeated .hadoop.yarn.QueueUserACLInfoProto queueUserAcls = 1;
  total_size += 1 * this->queueuseracls_size();
  for (int i = 0; i < this->queueuseracls_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->queueuseracls(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetQueueUserAclsInfoResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetQueueUserAclsInfoResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetQueueUserAclsInfoResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetQueueUserAclsInfoResponseProto::MergeFrom(const GetQueueUserAclsInfoResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  queueuseracls_.MergeFrom(from.queueuseracls_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetQueueUserAclsInfoResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQueueUserAclsInfoResponseProto::CopyFrom(const GetQueueUserAclsInfoResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQueueUserAclsInfoResponseProto::IsInitialized() const {

  return true;
}

void GetQueueUserAclsInfoResponseProto::Swap(GetQueueUserAclsInfoResponseProto* other) {
  if (other != this) {
    queueuseracls_.Swap(&other->queueuseracls_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetQueueUserAclsInfoResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetQueueUserAclsInfoResponseProto_descriptor_;
  metadata.reflection = GetQueueUserAclsInfoResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StartContainerRequestProto::kContainerLaunchContextFieldNumber;
const int StartContainerRequestProto::kContainerTokenFieldNumber;
#endif  // !_MSC_VER

StartContainerRequestProto::StartContainerRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StartContainerRequestProto::InitAsDefaultInstance() {
  container_launch_context_ = const_cast< ::hadoop::yarn::ContainerLaunchContextProto*>(&::hadoop::yarn::ContainerLaunchContextProto::default_instance());
  container_token_ = const_cast< ::hadoop::common::TokenProto*>(&::hadoop::common::TokenProto::default_instance());
}

StartContainerRequestProto::StartContainerRequestProto(const StartContainerRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StartContainerRequestProto::SharedCtor() {
  _cached_size_ = 0;
  container_launch_context_ = NULL;
  container_token_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StartContainerRequestProto::~StartContainerRequestProto() {
  SharedDtor();
}

void StartContainerRequestProto::SharedDtor() {
  if (this != default_instance_) {
    delete container_launch_context_;
    delete container_token_;
  }
}

void StartContainerRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartContainerRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartContainerRequestProto_descriptor_;
}

const StartContainerRequestProto& StartContainerRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

StartContainerRequestProto* StartContainerRequestProto::default_instance_ = NULL;

StartContainerRequestProto* StartContainerRequestProto::New() const {
  return new StartContainerRequestProto;
}

void StartContainerRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_container_launch_context()) {
      if (container_launch_context_ != NULL) container_launch_context_->::hadoop::yarn::ContainerLaunchContextProto::Clear();
    }
    if (has_container_token()) {
      if (container_token_ != NULL) container_token_->::hadoop::common::TokenProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StartContainerRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.ContainerLaunchContextProto container_launch_context = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_container_launch_context()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_container_token;
        break;
      }

      // optional .hadoop.common.TokenProto container_token = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_container_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_container_token()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StartContainerRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.ContainerLaunchContextProto container_launch_context = 1;
  if (has_container_launch_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->container_launch_context(), output);
  }

  // optional .hadoop.common.TokenProto container_token = 2;
  if (has_container_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->container_token(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StartContainerRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.ContainerLaunchContextProto container_launch_context = 1;
  if (has_container_launch_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->container_launch_context(), target);
  }

  // optional .hadoop.common.TokenProto container_token = 2;
  if (has_container_token()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->container_token(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StartContainerRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.ContainerLaunchContextProto container_launch_context = 1;
    if (has_container_launch_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->container_launch_context());
    }

    // optional .hadoop.common.TokenProto container_token = 2;
    if (has_container_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->container_token());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartContainerRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StartContainerRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StartContainerRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartContainerRequestProto::MergeFrom(const StartContainerRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_container_launch_context()) {
      mutable_container_launch_context()->::hadoop::yarn::ContainerLaunchContextProto::MergeFrom(from.container_launch_context());
    }
    if (from.has_container_token()) {
      mutable_container_token()->::hadoop::common::TokenProto::MergeFrom(from.container_token());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StartContainerRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartContainerRequestProto::CopyFrom(const StartContainerRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartContainerRequestProto::IsInitialized() const {

  if (has_container_token()) {
    if (!this->container_token().IsInitialized()) return false;
  }
  return true;
}

void StartContainerRequestProto::Swap(StartContainerRequestProto* other) {
  if (other != this) {
    std::swap(container_launch_context_, other->container_launch_context_);
    std::swap(container_token_, other->container_token_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StartContainerRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartContainerRequestProto_descriptor_;
  metadata.reflection = StartContainerRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StartContainerResponseProto::kServicesMetaDataFieldNumber;
#endif  // !_MSC_VER

StartContainerResponseProto::StartContainerResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StartContainerResponseProto::InitAsDefaultInstance() {
}

StartContainerResponseProto::StartContainerResponseProto(const StartContainerResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StartContainerResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StartContainerResponseProto::~StartContainerResponseProto() {
  SharedDtor();
}

void StartContainerResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StartContainerResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartContainerResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartContainerResponseProto_descriptor_;
}

const StartContainerResponseProto& StartContainerResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

StartContainerResponseProto* StartContainerResponseProto::default_instance_ = NULL;

StartContainerResponseProto* StartContainerResponseProto::New() const {
  return new StartContainerResponseProto;
}

void StartContainerResponseProto::Clear() {
  services_meta_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StartContainerResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hadoop.yarn.StringBytesMapProto services_meta_data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_services_meta_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_services_meta_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_services_meta_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StartContainerResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .hadoop.yarn.StringBytesMapProto services_meta_data = 1;
  for (int i = 0; i < this->services_meta_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->services_meta_data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StartContainerResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .hadoop.yarn.StringBytesMapProto services_meta_data = 1;
  for (int i = 0; i < this->services_meta_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->services_meta_data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StartContainerResponseProto::ByteSize() const {
  int total_size = 0;

  // repeated .hadoop.yarn.StringBytesMapProto services_meta_data = 1;
  total_size += 1 * this->services_meta_data_size();
  for (int i = 0; i < this->services_meta_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->services_meta_data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartContainerResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StartContainerResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StartContainerResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartContainerResponseProto::MergeFrom(const StartContainerResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  services_meta_data_.MergeFrom(from.services_meta_data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StartContainerResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartContainerResponseProto::CopyFrom(const StartContainerResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartContainerResponseProto::IsInitialized() const {

  return true;
}

void StartContainerResponseProto::Swap(StartContainerResponseProto* other) {
  if (other != this) {
    services_meta_data_.Swap(&other->services_meta_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StartContainerResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartContainerResponseProto_descriptor_;
  metadata.reflection = StartContainerResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StopContainerRequestProto::kContainerIdFieldNumber;
#endif  // !_MSC_VER

StopContainerRequestProto::StopContainerRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StopContainerRequestProto::InitAsDefaultInstance() {
  container_id_ = const_cast< ::hadoop::yarn::ContainerIdProto*>(&::hadoop::yarn::ContainerIdProto::default_instance());
}

StopContainerRequestProto::StopContainerRequestProto(const StopContainerRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StopContainerRequestProto::SharedCtor() {
  _cached_size_ = 0;
  container_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StopContainerRequestProto::~StopContainerRequestProto() {
  SharedDtor();
}

void StopContainerRequestProto::SharedDtor() {
  if (this != default_instance_) {
    delete container_id_;
  }
}

void StopContainerRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopContainerRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StopContainerRequestProto_descriptor_;
}

const StopContainerRequestProto& StopContainerRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

StopContainerRequestProto* StopContainerRequestProto::default_instance_ = NULL;

StopContainerRequestProto* StopContainerRequestProto::New() const {
  return new StopContainerRequestProto;
}

void StopContainerRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_container_id()) {
      if (container_id_ != NULL) container_id_->::hadoop::yarn::ContainerIdProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StopContainerRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.ContainerIdProto container_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_container_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StopContainerRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.ContainerIdProto container_id = 1;
  if (has_container_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->container_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StopContainerRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.ContainerIdProto container_id = 1;
  if (has_container_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->container_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StopContainerRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.ContainerIdProto container_id = 1;
    if (has_container_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->container_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopContainerRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StopContainerRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StopContainerRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StopContainerRequestProto::MergeFrom(const StopContainerRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_container_id()) {
      mutable_container_id()->::hadoop::yarn::ContainerIdProto::MergeFrom(from.container_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StopContainerRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopContainerRequestProto::CopyFrom(const StopContainerRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopContainerRequestProto::IsInitialized() const {

  return true;
}

void StopContainerRequestProto::Swap(StopContainerRequestProto* other) {
  if (other != this) {
    std::swap(container_id_, other->container_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StopContainerRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StopContainerRequestProto_descriptor_;
  metadata.reflection = StopContainerRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

StopContainerResponseProto::StopContainerResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StopContainerResponseProto::InitAsDefaultInstance() {
}

StopContainerResponseProto::StopContainerResponseProto(const StopContainerResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StopContainerResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StopContainerResponseProto::~StopContainerResponseProto() {
  SharedDtor();
}

void StopContainerResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StopContainerResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopContainerResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StopContainerResponseProto_descriptor_;
}

const StopContainerResponseProto& StopContainerResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

StopContainerResponseProto* StopContainerResponseProto::default_instance_ = NULL;

StopContainerResponseProto* StopContainerResponseProto::New() const {
  return new StopContainerResponseProto;
}

void StopContainerResponseProto::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StopContainerResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void StopContainerResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StopContainerResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StopContainerResponseProto::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopContainerResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StopContainerResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StopContainerResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StopContainerResponseProto::MergeFrom(const StopContainerResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StopContainerResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopContainerResponseProto::CopyFrom(const StopContainerResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopContainerResponseProto::IsInitialized() const {

  return true;
}

void StopContainerResponseProto::Swap(StopContainerResponseProto* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StopContainerResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StopContainerResponseProto_descriptor_;
  metadata.reflection = StopContainerResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetContainerStatusRequestProto::kContainerIdFieldNumber;
#endif  // !_MSC_VER

GetContainerStatusRequestProto::GetContainerStatusRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetContainerStatusRequestProto::InitAsDefaultInstance() {
  container_id_ = const_cast< ::hadoop::yarn::ContainerIdProto*>(&::hadoop::yarn::ContainerIdProto::default_instance());
}

GetContainerStatusRequestProto::GetContainerStatusRequestProto(const GetContainerStatusRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetContainerStatusRequestProto::SharedCtor() {
  _cached_size_ = 0;
  container_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetContainerStatusRequestProto::~GetContainerStatusRequestProto() {
  SharedDtor();
}

void GetContainerStatusRequestProto::SharedDtor() {
  if (this != default_instance_) {
    delete container_id_;
  }
}

void GetContainerStatusRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetContainerStatusRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetContainerStatusRequestProto_descriptor_;
}

const GetContainerStatusRequestProto& GetContainerStatusRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetContainerStatusRequestProto* GetContainerStatusRequestProto::default_instance_ = NULL;

GetContainerStatusRequestProto* GetContainerStatusRequestProto::New() const {
  return new GetContainerStatusRequestProto;
}

void GetContainerStatusRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_container_id()) {
      if (container_id_ != NULL) container_id_->::hadoop::yarn::ContainerIdProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetContainerStatusRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.ContainerIdProto container_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_container_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetContainerStatusRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.ContainerIdProto container_id = 1;
  if (has_container_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->container_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetContainerStatusRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.ContainerIdProto container_id = 1;
  if (has_container_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->container_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetContainerStatusRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.ContainerIdProto container_id = 1;
    if (has_container_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->container_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetContainerStatusRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetContainerStatusRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetContainerStatusRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetContainerStatusRequestProto::MergeFrom(const GetContainerStatusRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_container_id()) {
      mutable_container_id()->::hadoop::yarn::ContainerIdProto::MergeFrom(from.container_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetContainerStatusRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetContainerStatusRequestProto::CopyFrom(const GetContainerStatusRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContainerStatusRequestProto::IsInitialized() const {

  return true;
}

void GetContainerStatusRequestProto::Swap(GetContainerStatusRequestProto* other) {
  if (other != this) {
    std::swap(container_id_, other->container_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetContainerStatusRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetContainerStatusRequestProto_descriptor_;
  metadata.reflection = GetContainerStatusRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetContainerStatusResponseProto::kStatusFieldNumber;
#endif  // !_MSC_VER

GetContainerStatusResponseProto::GetContainerStatusResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetContainerStatusResponseProto::InitAsDefaultInstance() {
  status_ = const_cast< ::hadoop::yarn::ContainerStatusProto*>(&::hadoop::yarn::ContainerStatusProto::default_instance());
}

GetContainerStatusResponseProto::GetContainerStatusResponseProto(const GetContainerStatusResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetContainerStatusResponseProto::SharedCtor() {
  _cached_size_ = 0;
  status_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetContainerStatusResponseProto::~GetContainerStatusResponseProto() {
  SharedDtor();
}

void GetContainerStatusResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete status_;
  }
}

void GetContainerStatusResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetContainerStatusResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetContainerStatusResponseProto_descriptor_;
}

const GetContainerStatusResponseProto& GetContainerStatusResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetContainerStatusResponseProto* GetContainerStatusResponseProto::default_instance_ = NULL;

GetContainerStatusResponseProto* GetContainerStatusResponseProto::New() const {
  return new GetContainerStatusResponseProto;
}

void GetContainerStatusResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_status()) {
      if (status_ != NULL) status_->::hadoop::yarn::ContainerStatusProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetContainerStatusResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.ContainerStatusProto status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetContainerStatusResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.ContainerStatusProto status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetContainerStatusResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.ContainerStatusProto status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetContainerStatusResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.ContainerStatusProto status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetContainerStatusResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetContainerStatusResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetContainerStatusResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetContainerStatusResponseProto::MergeFrom(const GetContainerStatusResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      mutable_status()->::hadoop::yarn::ContainerStatusProto::MergeFrom(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetContainerStatusResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetContainerStatusResponseProto::CopyFrom(const GetContainerStatusResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContainerStatusResponseProto::IsInitialized() const {

  return true;
}

void GetContainerStatusResponseProto::Swap(GetContainerStatusResponseProto* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetContainerStatusResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetContainerStatusResponseProto_descriptor_;
  metadata.reflection = GetContainerStatusResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StartContainersRequestProto::kStartContainerRequestFieldNumber;
#endif  // !_MSC_VER

StartContainersRequestProto::StartContainersRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StartContainersRequestProto::InitAsDefaultInstance() {
}

StartContainersRequestProto::StartContainersRequestProto(const StartContainersRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StartContainersRequestProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StartContainersRequestProto::~StartContainersRequestProto() {
  SharedDtor();
}

void StartContainersRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StartContainersRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartContainersRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartContainersRequestProto_descriptor_;
}

const StartContainersRequestProto& StartContainersRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

StartContainersRequestProto* StartContainersRequestProto::default_instance_ = NULL;

StartContainersRequestProto* StartContainersRequestProto::New() const {
  return new StartContainersRequestProto;
}

void StartContainersRequestProto::Clear() {
  start_container_request_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StartContainersRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hadoop.yarn.StartContainerRequestProto start_container_request = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_start_container_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_start_container_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_start_container_request;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StartContainersRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .hadoop.yarn.StartContainerRequestProto start_container_request = 1;
  for (int i = 0; i < this->start_container_request_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->start_container_request(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StartContainersRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .hadoop.yarn.StartContainerRequestProto start_container_request = 1;
  for (int i = 0; i < this->start_container_request_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->start_container_request(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StartContainersRequestProto::ByteSize() const {
  int total_size = 0;

  // repeated .hadoop.yarn.StartContainerRequestProto start_container_request = 1;
  total_size += 1 * this->start_container_request_size();
  for (int i = 0; i < this->start_container_request_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->start_container_request(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartContainersRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StartContainersRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StartContainersRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartContainersRequestProto::MergeFrom(const StartContainersRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  start_container_request_.MergeFrom(from.start_container_request_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StartContainersRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartContainersRequestProto::CopyFrom(const StartContainersRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartContainersRequestProto::IsInitialized() const {

  for (int i = 0; i < start_container_request_size(); i++) {
    if (!this->start_container_request(i).IsInitialized()) return false;
  }
  return true;
}

void StartContainersRequestProto::Swap(StartContainersRequestProto* other) {
  if (other != this) {
    start_container_request_.Swap(&other->start_container_request_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StartContainersRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartContainersRequestProto_descriptor_;
  metadata.reflection = StartContainersRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ContainerExceptionMapProto::kContainerIdFieldNumber;
const int ContainerExceptionMapProto::kExceptionFieldNumber;
#endif  // !_MSC_VER

ContainerExceptionMapProto::ContainerExceptionMapProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ContainerExceptionMapProto::InitAsDefaultInstance() {
  container_id_ = const_cast< ::hadoop::yarn::ContainerIdProto*>(&::hadoop::yarn::ContainerIdProto::default_instance());
  exception_ = const_cast< ::hadoop::yarn::SerializedExceptionProto*>(&::hadoop::yarn::SerializedExceptionProto::default_instance());
}

ContainerExceptionMapProto::ContainerExceptionMapProto(const ContainerExceptionMapProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ContainerExceptionMapProto::SharedCtor() {
  _cached_size_ = 0;
  container_id_ = NULL;
  exception_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContainerExceptionMapProto::~ContainerExceptionMapProto() {
  SharedDtor();
}

void ContainerExceptionMapProto::SharedDtor() {
  if (this != default_instance_) {
    delete container_id_;
    delete exception_;
  }
}

void ContainerExceptionMapProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerExceptionMapProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContainerExceptionMapProto_descriptor_;
}

const ContainerExceptionMapProto& ContainerExceptionMapProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

ContainerExceptionMapProto* ContainerExceptionMapProto::default_instance_ = NULL;

ContainerExceptionMapProto* ContainerExceptionMapProto::New() const {
  return new ContainerExceptionMapProto;
}

void ContainerExceptionMapProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_container_id()) {
      if (container_id_ != NULL) container_id_->::hadoop::yarn::ContainerIdProto::Clear();
    }
    if (has_exception()) {
      if (exception_ != NULL) exception_->::hadoop::yarn::SerializedExceptionProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ContainerExceptionMapProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hadoop.yarn.ContainerIdProto container_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_container_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_exception;
        break;
      }

      // optional .hadoop.yarn.SerializedExceptionProto exception = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_exception:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_exception()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ContainerExceptionMapProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .hadoop.yarn.ContainerIdProto container_id = 1;
  if (has_container_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->container_id(), output);
  }

  // optional .hadoop.yarn.SerializedExceptionProto exception = 2;
  if (has_exception()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->exception(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ContainerExceptionMapProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .hadoop.yarn.ContainerIdProto container_id = 1;
  if (has_container_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->container_id(), target);
  }

  // optional .hadoop.yarn.SerializedExceptionProto exception = 2;
  if (has_exception()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->exception(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ContainerExceptionMapProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .hadoop.yarn.ContainerIdProto container_id = 1;
    if (has_container_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->container_id());
    }

    // optional .hadoop.yarn.SerializedExceptionProto exception = 2;
    if (has_exception()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->exception());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerExceptionMapProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ContainerExceptionMapProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ContainerExceptionMapProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContainerExceptionMapProto::MergeFrom(const ContainerExceptionMapProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_container_id()) {
      mutable_container_id()->::hadoop::yarn::ContainerIdProto::MergeFrom(from.container_id());
    }
    if (from.has_exception()) {
      mutable_exception()->::hadoop::yarn::SerializedExceptionProto::MergeFrom(from.exception());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ContainerExceptionMapProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerExceptionMapProto::CopyFrom(const ContainerExceptionMapProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerExceptionMapProto::IsInitialized() const {

  return true;
}

void ContainerExceptionMapProto::Swap(ContainerExceptionMapProto* other) {
  if (other != this) {
    std::swap(container_id_, other->container_id_);
    std::swap(exception_, other->exception_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ContainerExceptionMapProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContainerExceptionMapProto_descriptor_;
  metadata.reflection = ContainerExceptionMapProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StartContainersResponseProto::kServicesMetaDataFieldNumber;
const int StartContainersResponseProto::kSucceededRequestsFieldNumber;
const int StartContainersResponseProto::kFailedRequestsFieldNumber;
#endif  // !_MSC_VER

StartContainersResponseProto::StartContainersResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StartContainersResponseProto::InitAsDefaultInstance() {
}

StartContainersResponseProto::StartContainersResponseProto(const StartContainersResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StartContainersResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StartContainersResponseProto::~StartContainersResponseProto() {
  SharedDtor();
}

void StartContainersResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StartContainersResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartContainersResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartContainersResponseProto_descriptor_;
}

const StartContainersResponseProto& StartContainersResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

StartContainersResponseProto* StartContainersResponseProto::default_instance_ = NULL;

StartContainersResponseProto* StartContainersResponseProto::New() const {
  return new StartContainersResponseProto;
}

void StartContainersResponseProto::Clear() {
  services_meta_data_.Clear();
  succeeded_requests_.Clear();
  failed_requests_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StartContainersResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hadoop.yarn.StringBytesMapProto services_meta_data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_services_meta_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_services_meta_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_services_meta_data;
        if (input->ExpectTag(18)) goto parse_succeeded_requests;
        break;
      }

      // repeated .hadoop.yarn.ContainerIdProto succeeded_requests = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_succeeded_requests:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_succeeded_requests()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_succeeded_requests;
        if (input->ExpectTag(26)) goto parse_failed_requests;
        break;
      }

      // repeated .hadoop.yarn.ContainerExceptionMapProto failed_requests = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_failed_requests:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_failed_requests()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_failed_requests;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StartContainersResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .hadoop.yarn.StringBytesMapProto services_meta_data = 1;
  for (int i = 0; i < this->services_meta_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->services_meta_data(i), output);
  }

  // repeated .hadoop.yarn.ContainerIdProto succeeded_requests = 2;
  for (int i = 0; i < this->succeeded_requests_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->succeeded_requests(i), output);
  }

  // repeated .hadoop.yarn.ContainerExceptionMapProto failed_requests = 3;
  for (int i = 0; i < this->failed_requests_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->failed_requests(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StartContainersResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .hadoop.yarn.StringBytesMapProto services_meta_data = 1;
  for (int i = 0; i < this->services_meta_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->services_meta_data(i), target);
  }

  // repeated .hadoop.yarn.ContainerIdProto succeeded_requests = 2;
  for (int i = 0; i < this->succeeded_requests_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->succeeded_requests(i), target);
  }

  // repeated .hadoop.yarn.ContainerExceptionMapProto failed_requests = 3;
  for (int i = 0; i < this->failed_requests_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->failed_requests(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StartContainersResponseProto::ByteSize() const {
  int total_size = 0;

  // repeated .hadoop.yarn.StringBytesMapProto services_meta_data = 1;
  total_size += 1 * this->services_meta_data_size();
  for (int i = 0; i < this->services_meta_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->services_meta_data(i));
  }

  // repeated .hadoop.yarn.ContainerIdProto succeeded_requests = 2;
  total_size += 1 * this->succeeded_requests_size();
  for (int i = 0; i < this->succeeded_requests_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->succeeded_requests(i));
  }

  // repeated .hadoop.yarn.ContainerExceptionMapProto failed_requests = 3;
  total_size += 1 * this->failed_requests_size();
  for (int i = 0; i < this->failed_requests_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->failed_requests(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartContainersResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StartContainersResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StartContainersResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartContainersResponseProto::MergeFrom(const StartContainersResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  services_meta_data_.MergeFrom(from.services_meta_data_);
  succeeded_requests_.MergeFrom(from.succeeded_requests_);
  failed_requests_.MergeFrom(from.failed_requests_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StartContainersResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartContainersResponseProto::CopyFrom(const StartContainersResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartContainersResponseProto::IsInitialized() const {

  return true;
}

void StartContainersResponseProto::Swap(StartContainersResponseProto* other) {
  if (other != this) {
    services_meta_data_.Swap(&other->services_meta_data_);
    succeeded_requests_.Swap(&other->succeeded_requests_);
    failed_requests_.Swap(&other->failed_requests_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StartContainersResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartContainersResponseProto_descriptor_;
  metadata.reflection = StartContainersResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StopContainersRequestProto::kContainerIdFieldNumber;
#endif  // !_MSC_VER

StopContainersRequestProto::StopContainersRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StopContainersRequestProto::InitAsDefaultInstance() {
}

StopContainersRequestProto::StopContainersRequestProto(const StopContainersRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StopContainersRequestProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StopContainersRequestProto::~StopContainersRequestProto() {
  SharedDtor();
}

void StopContainersRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StopContainersRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopContainersRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StopContainersRequestProto_descriptor_;
}

const StopContainersRequestProto& StopContainersRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

StopContainersRequestProto* StopContainersRequestProto::default_instance_ = NULL;

StopContainersRequestProto* StopContainersRequestProto::New() const {
  return new StopContainersRequestProto;
}

void StopContainersRequestProto::Clear() {
  container_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StopContainersRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hadoop.yarn.ContainerIdProto container_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_container_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_container_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_container_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StopContainersRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .hadoop.yarn.ContainerIdProto container_id = 1;
  for (int i = 0; i < this->container_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->container_id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StopContainersRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .hadoop.yarn.ContainerIdProto container_id = 1;
  for (int i = 0; i < this->container_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->container_id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StopContainersRequestProto::ByteSize() const {
  int total_size = 0;

  // repeated .hadoop.yarn.ContainerIdProto container_id = 1;
  total_size += 1 * this->container_id_size();
  for (int i = 0; i < this->container_id_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->container_id(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopContainersRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StopContainersRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StopContainersRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StopContainersRequestProto::MergeFrom(const StopContainersRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  container_id_.MergeFrom(from.container_id_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StopContainersRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopContainersRequestProto::CopyFrom(const StopContainersRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopContainersRequestProto::IsInitialized() const {

  return true;
}

void StopContainersRequestProto::Swap(StopContainersRequestProto* other) {
  if (other != this) {
    container_id_.Swap(&other->container_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StopContainersRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StopContainersRequestProto_descriptor_;
  metadata.reflection = StopContainersRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StopContainersResponseProto::kSucceededRequestsFieldNumber;
const int StopContainersResponseProto::kFailedRequestsFieldNumber;
#endif  // !_MSC_VER

StopContainersResponseProto::StopContainersResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StopContainersResponseProto::InitAsDefaultInstance() {
}

StopContainersResponseProto::StopContainersResponseProto(const StopContainersResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StopContainersResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StopContainersResponseProto::~StopContainersResponseProto() {
  SharedDtor();
}

void StopContainersResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StopContainersResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopContainersResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StopContainersResponseProto_descriptor_;
}

const StopContainersResponseProto& StopContainersResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

StopContainersResponseProto* StopContainersResponseProto::default_instance_ = NULL;

StopContainersResponseProto* StopContainersResponseProto::New() const {
  return new StopContainersResponseProto;
}

void StopContainersResponseProto::Clear() {
  succeeded_requests_.Clear();
  failed_requests_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StopContainersResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hadoop.yarn.ContainerIdProto succeeded_requests = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_succeeded_requests:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_succeeded_requests()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_succeeded_requests;
        if (input->ExpectTag(18)) goto parse_failed_requests;
        break;
      }

      // repeated .hadoop.yarn.ContainerExceptionMapProto failed_requests = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_failed_requests:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_failed_requests()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_failed_requests;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StopContainersResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .hadoop.yarn.ContainerIdProto succeeded_requests = 1;
  for (int i = 0; i < this->succeeded_requests_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->succeeded_requests(i), output);
  }

  // repeated .hadoop.yarn.ContainerExceptionMapProto failed_requests = 2;
  for (int i = 0; i < this->failed_requests_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->failed_requests(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StopContainersResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .hadoop.yarn.ContainerIdProto succeeded_requests = 1;
  for (int i = 0; i < this->succeeded_requests_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->succeeded_requests(i), target);
  }

  // repeated .hadoop.yarn.ContainerExceptionMapProto failed_requests = 2;
  for (int i = 0; i < this->failed_requests_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->failed_requests(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StopContainersResponseProto::ByteSize() const {
  int total_size = 0;

  // repeated .hadoop.yarn.ContainerIdProto succeeded_requests = 1;
  total_size += 1 * this->succeeded_requests_size();
  for (int i = 0; i < this->succeeded_requests_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->succeeded_requests(i));
  }

  // repeated .hadoop.yarn.ContainerExceptionMapProto failed_requests = 2;
  total_size += 1 * this->failed_requests_size();
  for (int i = 0; i < this->failed_requests_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->failed_requests(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopContainersResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StopContainersResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StopContainersResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StopContainersResponseProto::MergeFrom(const StopContainersResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  succeeded_requests_.MergeFrom(from.succeeded_requests_);
  failed_requests_.MergeFrom(from.failed_requests_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StopContainersResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopContainersResponseProto::CopyFrom(const StopContainersResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopContainersResponseProto::IsInitialized() const {

  return true;
}

void StopContainersResponseProto::Swap(StopContainersResponseProto* other) {
  if (other != this) {
    succeeded_requests_.Swap(&other->succeeded_requests_);
    failed_requests_.Swap(&other->failed_requests_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StopContainersResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StopContainersResponseProto_descriptor_;
  metadata.reflection = StopContainersResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetContainerStatusesRequestProto::kContainerIdFieldNumber;
#endif  // !_MSC_VER

GetContainerStatusesRequestProto::GetContainerStatusesRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetContainerStatusesRequestProto::InitAsDefaultInstance() {
}

GetContainerStatusesRequestProto::GetContainerStatusesRequestProto(const GetContainerStatusesRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetContainerStatusesRequestProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetContainerStatusesRequestProto::~GetContainerStatusesRequestProto() {
  SharedDtor();
}

void GetContainerStatusesRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetContainerStatusesRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetContainerStatusesRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetContainerStatusesRequestProto_descriptor_;
}

const GetContainerStatusesRequestProto& GetContainerStatusesRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetContainerStatusesRequestProto* GetContainerStatusesRequestProto::default_instance_ = NULL;

GetContainerStatusesRequestProto* GetContainerStatusesRequestProto::New() const {
  return new GetContainerStatusesRequestProto;
}

void GetContainerStatusesRequestProto::Clear() {
  container_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetContainerStatusesRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hadoop.yarn.ContainerIdProto container_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_container_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_container_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_container_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetContainerStatusesRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .hadoop.yarn.ContainerIdProto container_id = 1;
  for (int i = 0; i < this->container_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->container_id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetContainerStatusesRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .hadoop.yarn.ContainerIdProto container_id = 1;
  for (int i = 0; i < this->container_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->container_id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetContainerStatusesRequestProto::ByteSize() const {
  int total_size = 0;

  // repeated .hadoop.yarn.ContainerIdProto container_id = 1;
  total_size += 1 * this->container_id_size();
  for (int i = 0; i < this->container_id_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->container_id(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetContainerStatusesRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetContainerStatusesRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetContainerStatusesRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetContainerStatusesRequestProto::MergeFrom(const GetContainerStatusesRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  container_id_.MergeFrom(from.container_id_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetContainerStatusesRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetContainerStatusesRequestProto::CopyFrom(const GetContainerStatusesRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContainerStatusesRequestProto::IsInitialized() const {

  return true;
}

void GetContainerStatusesRequestProto::Swap(GetContainerStatusesRequestProto* other) {
  if (other != this) {
    container_id_.Swap(&other->container_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetContainerStatusesRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetContainerStatusesRequestProto_descriptor_;
  metadata.reflection = GetContainerStatusesRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetContainerStatusesResponseProto::kStatusFieldNumber;
const int GetContainerStatusesResponseProto::kFailedRequestsFieldNumber;
#endif  // !_MSC_VER

GetContainerStatusesResponseProto::GetContainerStatusesResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetContainerStatusesResponseProto::InitAsDefaultInstance() {
}

GetContainerStatusesResponseProto::GetContainerStatusesResponseProto(const GetContainerStatusesResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetContainerStatusesResponseProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetContainerStatusesResponseProto::~GetContainerStatusesResponseProto() {
  SharedDtor();
}

void GetContainerStatusesResponseProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetContainerStatusesResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetContainerStatusesResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetContainerStatusesResponseProto_descriptor_;
}

const GetContainerStatusesResponseProto& GetContainerStatusesResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarn_5fservice_5fprotos_2eproto();
  return *default_instance_;
}

GetContainerStatusesResponseProto* GetContainerStatusesResponseProto::default_instance_ = NULL;

GetContainerStatusesResponseProto* GetContainerStatusesResponseProto::New() const {
  return new GetContainerStatusesResponseProto;
}

void GetContainerStatusesResponseProto::Clear() {
  status_.Clear();
  failed_requests_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetContainerStatusesResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hadoop.yarn.ContainerStatusProto status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_status()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_status;
        if (input->ExpectTag(18)) goto parse_failed_requests;
        break;
      }

      // repeated .hadoop.yarn.ContainerExceptionMapProto failed_requests = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_failed_requests:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_failed_requests()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_failed_requests;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetContainerStatusesResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .hadoop.yarn.ContainerStatusProto status = 1;
  for (int i = 0; i < this->status_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->status(i), output);
  }

  // repeated .hadoop.yarn.ContainerExceptionMapProto failed_requests = 2;
  for (int i = 0; i < this->failed_requests_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->failed_requests(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetContainerStatusesResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .hadoop.yarn.ContainerStatusProto status = 1;
  for (int i = 0; i < this->status_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->status(i), target);
  }

  // repeated .hadoop.yarn.ContainerExceptionMapProto failed_requests = 2;
  for (int i = 0; i < this->failed_requests_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->failed_requests(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetContainerStatusesResponseProto::ByteSize() const {
  int total_size = 0;

  // repeated .hadoop.yarn.ContainerStatusProto status = 1;
  total_size += 1 * this->status_size();
  for (int i = 0; i < this->status_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->status(i));
  }

  // repeated .hadoop.yarn.ContainerExceptionMapProto failed_requests = 2;
  total_size += 1 * this->failed_requests_size();
  for (int i = 0; i < this->failed_requests_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->failed_requests(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetContainerStatusesResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetContainerStatusesResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetContainerStatusesResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetContainerStatusesResponseProto::MergeFrom(const GetContainerStatusesResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  status_.MergeFrom(from.status_);
  failed_requests_.MergeFrom(from.failed_requests_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetContainerStatusesResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetContainerStatusesResponseProto::CopyFrom(const GetContainerStatusesResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContainerStatusesResponseProto::IsInitialized() const {

  return true;
}

void GetContainerStatusesResponseProto::Swap(GetContainerStatusesResponseProto* other) {
  if (other != this) {
    status_.Swap(&other->status_);
    failed_requests_.Swap(&other->failed_requests_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetContainerStatusesResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetContainerStatusesResponseProto_descriptor_;
  metadata.reflection = GetContainerStatusesResponseProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace yarn
}  // namespace hadoop

// @@protoc_insertion_point(global_scope)
